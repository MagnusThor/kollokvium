/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/app.js":
/*!***********************!*\
  !*** ./client/app.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst thor_io_client_vnext_1 = __webpack_require__(/*! thor-io.client-vnext */ \"./node_modules/thor-io.client-vnext/index.js\");\nconst clipboard_1 = __importDefault(__webpack_require__(/*! clipboard */ \"./node_modules/clipboard/dist/clipboard.js\"));\nclass App {\n    connect(brokerUrl, config) {\n        var url = brokerUrl;\n        return new thor_io_client_vnext_1.ThorIOClient.Factory(url, [\"broker\"]);\n    }\n    constructor() {\n        let fullScreenVideo = document.querySelector(\".full\");\n        let slug = document.querySelector(\"#slug\");\n        let startButton = document.querySelector(\"#joinconference\");\n        let shareContainer = document.querySelector(\".remote .container\");\n        const joinSlug = location.hash.replace(\"#\", \"\");\n        let clipBoard = new clipboard_1.default(\"#share-link\", {\n            text: (t) => {\n                t.textContent = \"Done!\";\n                return location.origin + \"/#\" + slug.value;\n            }\n        });\n        if (joinSlug.length >= 6) {\n            slug.value = joinSlug;\n            startButton.disabled = false;\n        }\n        slug.addEventListener(\"keyup\", () => {\n            if (slug.value.length >= 6) {\n                startButton.disabled = false;\n            }\n            else {\n                startButton.disabled = true;\n            }\n        });\n        const addRemoteVideo = (mediaStream, peerId) => {\n            if (!shareContainer.classList.contains(\"hide\")) {\n                shareContainer.classList.add(\"hide\");\n            }\n            let video = document.createElement(\"video\");\n            video.srcObject = mediaStream;\n            video.setAttribute(\"id\", \"p\" + peerId);\n            video.autoplay = true;\n            document.querySelector(\".remote\").append(video);\n            video.addEventListener(\"click\", (e) => {\n                fullScreenVideo.play();\n                fullScreenVideo.srcObject = e.target.srcObject;\n            });\n        };\n        const addLocalVideo = (mediaStream) => {\n            let video = document.querySelector(\".local video\");\n            video.srcObject = mediaStream;\n        };\n        const rtcConfig = {\n            \"iceTransports\": 'all',\n            \"rtcpMuxPolicy\": \"require\",\n            \"bundlePolicy\": \"max-bundle\",\n            \"iceServers\": [\n                {\n                    \"urls\": \"stun:stun.l.google.com:19302\"\n                }\n            ]\n        };\n        startButton.addEventListener(\"click\", () => {\n            startButton.classList.add(\"hide\");\n            document.querySelector(\".remote\").classList.remove(\"hide\");\n            document.querySelector(\".overlay\").classList.add(\"d-none\");\n            document.querySelector(\".join\").classList.add(\"d-none\");\n            this.rtcClient.ChangeContext(slug.value);\n        });\n        // if local ws://localhost:1337/     \n        this.factory = this.connect(\"wss://simpleconf.herokuapp.com/\", {});\n        this.factory.OnClose = (reason) => {\n            console.error(reason);\n        };\n        this.factory.OnOpen = (broker) => {\n            console.log(\"OnOpen\", broker);\n            this.rtcClient = new thor_io_client_vnext_1.ThorIOClient.WebRTC(broker, rtcConfig);\n            this.rtcClient.OnLocalStream = (mediaStream) => {\n            };\n            // this will fire when url has a parameter\n            this.rtcClient.OnContextConnected = (ctx) => {\n            };\n            this.rtcClient.OnContextCreated = (ctx) => {\n            };\n            this.rtcClient.OnContextChanged = (ctx) => {\n                this.rtcClient.ConnectContext();\n                console.log(\"looks like we are abut to join a context...\", ctx);\n            };\n            this.rtcClient.OnContextDisconnected = (peer) => {\n                console.log(\"lost connection to\", peer);\n                document.querySelector(\"#p\" + peer.id).remove();\n            };\n            this.rtcClient.OnContextConnected = (peer) => {\n                console.log(\"connected to\", peer);\n                document.querySelector(\".remote\").classList.remove(\"hide\");\n                addRemoteVideo(peer.stream, peer.id);\n            };\n            this.rtcClient.OnRemoteTrack = (track, connection) => {\n                console.log(\"looks like we got a remote media steamTrack\", track);\n                // addRemoteVideo(mediaStream);\n            };\n            this.rtcClient.OnContextCreated = function (ctx) {\n                console.log(\"got a context from the broker\", ctx);\n            };\n            broker.OnOpen = (ci) => {\n                console.log(\"connected to broker\");\n                // now get a media stream for local\n                navigator.getUserMedia({\n                    video: {\n                        width: { min: 640, ideal: 1280 },\n                        height: { min: 400, ideal: 720 }\n                    }, audio: true,\n                }, (mediaStream) => {\n                    this.rtcClient.AddLocalStream(mediaStream);\n                    addLocalVideo(mediaStream);\n                }, (err) => {\n                    console.error(err);\n                });\n            };\n            broker.Connect();\n            window[\"T\"] = this.rtcClient;\n        };\n    }\n    static getInstance() {\n        return new App();\n    }\n}\nexports.App = App;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    App.getInstance();\n});\n\n\n//# sourceURL=webpack:///./client/app.js?");

/***/ }),

/***/ "./node_modules/clipboard/dist/clipboard.js":
/*!**************************************************!*\
  !*** ./node_modules/clipboard/dist/clipboard.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/*!\n * clipboard.js v2.0.4\n * https://zenorocha.github.io/clipboard.js\n * \n * Licensed MIT © Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _clipboardAction = __webpack_require__(1);\n\nvar _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\nvar _tinyEmitter = __webpack_require__(3);\n\nvar _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\nvar _goodListener = __webpack_require__(4);\n\nvar _goodListener2 = _interopRequireDefault(_goodListener);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\nvar Clipboard = function (_Emitter) {\n    _inherits(Clipboard, _Emitter);\n\n    /**\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     * @param {Object} options\n     */\n    function Clipboard(trigger, options) {\n        _classCallCheck(this, Clipboard);\n\n        var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n        _this.resolveOptions(options);\n        _this.listenClick(trigger);\n        return _this;\n    }\n\n    /**\n     * Defines if attributes would be resolved using internal setter functions\n     * or custom functions that were passed in the constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(Clipboard, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n            this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n            this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n            this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n        }\n\n        /**\n         * Adds a click event listener to the passed trigger.\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         */\n\n    }, {\n        key: 'listenClick',\n        value: function listenClick(trigger) {\n            var _this2 = this;\n\n            this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                return _this2.onClick(e);\n            });\n        }\n\n        /**\n         * Defines a new `ClipboardAction` on each click event.\n         * @param {Event} e\n         */\n\n    }, {\n        key: 'onClick',\n        value: function onClick(e) {\n            var trigger = e.delegateTarget || e.currentTarget;\n\n            if (this.clipboardAction) {\n                this.clipboardAction = null;\n            }\n\n            this.clipboardAction = new _clipboardAction2.default({\n                action: this.action(trigger),\n                target: this.target(trigger),\n                text: this.text(trigger),\n                container: this.container,\n                trigger: trigger,\n                emitter: this\n            });\n        }\n\n        /**\n         * Default `action` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultAction',\n        value: function defaultAction(trigger) {\n            return getAttributeValue('action', trigger);\n        }\n\n        /**\n         * Default `target` lookup function.\n         * @param {Element} trigger\n         */\n\n    }, {\n        key: 'defaultTarget',\n        value: function defaultTarget(trigger) {\n            var selector = getAttributeValue('target', trigger);\n\n            if (selector) {\n                return document.querySelector(selector);\n            }\n        }\n\n        /**\n         * Returns the support of the given action, or all actions if no action is\n         * given.\n         * @param {String} [action]\n         */\n\n    }, {\n        key: 'defaultText',\n\n\n        /**\n         * Default `text` lookup function.\n         * @param {Element} trigger\n         */\n        value: function defaultText(trigger) {\n            return getAttributeValue('text', trigger);\n        }\n\n        /**\n         * Destroy lifecycle.\n         */\n\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.listener.destroy();\n\n            if (this.clipboardAction) {\n                this.clipboardAction.destroy();\n                this.clipboardAction = null;\n            }\n        }\n    }], [{\n        key: 'isSupported',\n        value: function isSupported() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n            var actions = typeof action === 'string' ? [action] : action;\n            var support = !!document.queryCommandSupported;\n\n            actions.forEach(function (action) {\n                support = support && !!document.queryCommandSupported(action);\n            });\n\n            return support;\n        }\n    }]);\n\n    return Clipboard;\n}(_tinyEmitter2.default);\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\n\nfunction getAttributeValue(suffix, element) {\n    var attribute = 'data-clipboard-' + suffix;\n\n    if (!element.hasAttribute(attribute)) {\n        return;\n    }\n\n    return element.getAttribute(attribute);\n}\n\nmodule.exports = Clipboard;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _select = __webpack_require__(2);\n\nvar _select2 = _interopRequireDefault(_select);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Inner class which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n */\nvar ClipboardAction = function () {\n    /**\n     * @param {Object} options\n     */\n    function ClipboardAction(options) {\n        _classCallCheck(this, ClipboardAction);\n\n        this.resolveOptions(options);\n        this.initSelection();\n    }\n\n    /**\n     * Defines base properties passed from constructor.\n     * @param {Object} options\n     */\n\n\n    _createClass(ClipboardAction, [{\n        key: 'resolveOptions',\n        value: function resolveOptions() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            this.action = options.action;\n            this.container = options.container;\n            this.emitter = options.emitter;\n            this.target = options.target;\n            this.text = options.text;\n            this.trigger = options.trigger;\n\n            this.selectedText = '';\n        }\n\n        /**\n         * Decides which selection strategy is going to be applied based\n         * on the existence of `text` and `target` properties.\n         */\n\n    }, {\n        key: 'initSelection',\n        value: function initSelection() {\n            if (this.text) {\n                this.selectFake();\n            } else if (this.target) {\n                this.selectTarget();\n            }\n        }\n\n        /**\n         * Creates a fake textarea element, sets its value from `text` property,\n         * and makes a selection on it.\n         */\n\n    }, {\n        key: 'selectFake',\n        value: function selectFake() {\n            var _this = this;\n\n            var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n            this.removeFake();\n\n            this.fakeHandlerCallback = function () {\n                return _this.removeFake();\n            };\n            this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n            this.fakeElem = document.createElement('textarea');\n            // Prevent zooming on iOS\n            this.fakeElem.style.fontSize = '12pt';\n            // Reset box model\n            this.fakeElem.style.border = '0';\n            this.fakeElem.style.padding = '0';\n            this.fakeElem.style.margin = '0';\n            // Move element out of screen horizontally\n            this.fakeElem.style.position = 'absolute';\n            this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n            // Move element to the same position vertically\n            var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n            this.fakeElem.style.top = yPosition + 'px';\n\n            this.fakeElem.setAttribute('readonly', '');\n            this.fakeElem.value = this.text;\n\n            this.container.appendChild(this.fakeElem);\n\n            this.selectedText = (0, _select2.default)(this.fakeElem);\n            this.copyText();\n        }\n\n        /**\n         * Only removes the fake element after another click event, that way\n         * a user can hit `Ctrl+C` to copy because selection still exists.\n         */\n\n    }, {\n        key: 'removeFake',\n        value: function removeFake() {\n            if (this.fakeHandler) {\n                this.container.removeEventListener('click', this.fakeHandlerCallback);\n                this.fakeHandler = null;\n                this.fakeHandlerCallback = null;\n            }\n\n            if (this.fakeElem) {\n                this.container.removeChild(this.fakeElem);\n                this.fakeElem = null;\n            }\n        }\n\n        /**\n         * Selects the content from element passed on `target` property.\n         */\n\n    }, {\n        key: 'selectTarget',\n        value: function selectTarget() {\n            this.selectedText = (0, _select2.default)(this.target);\n            this.copyText();\n        }\n\n        /**\n         * Executes the copy operation based on the current selection.\n         */\n\n    }, {\n        key: 'copyText',\n        value: function copyText() {\n            var succeeded = void 0;\n\n            try {\n                succeeded = document.execCommand(this.action);\n            } catch (err) {\n                succeeded = false;\n            }\n\n            this.handleResult(succeeded);\n        }\n\n        /**\n         * Fires an event based on the copy operation result.\n         * @param {Boolean} succeeded\n         */\n\n    }, {\n        key: 'handleResult',\n        value: function handleResult(succeeded) {\n            this.emitter.emit(succeeded ? 'success' : 'error', {\n                action: this.action,\n                text: this.selectedText,\n                trigger: this.trigger,\n                clearSelection: this.clearSelection.bind(this)\n            });\n        }\n\n        /**\n         * Moves focus away from `target` and back to the trigger, removes current selection.\n         */\n\n    }, {\n        key: 'clearSelection',\n        value: function clearSelection() {\n            if (this.trigger) {\n                this.trigger.focus();\n            }\n\n            window.getSelection().removeAllRanges();\n        }\n\n        /**\n         * Sets the `action` to be performed which can be either 'copy' or 'cut'.\n         * @param {String} action\n         */\n\n    }, {\n        key: 'destroy',\n\n\n        /**\n         * Destroy lifecycle.\n         */\n        value: function destroy() {\n            this.removeFake();\n        }\n    }, {\n        key: 'action',\n        set: function set() {\n            var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n            this._action = action;\n\n            if (this._action !== 'copy' && this._action !== 'cut') {\n                throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n            }\n        }\n\n        /**\n         * Gets the `action` property.\n         * @return {String}\n         */\n        ,\n        get: function get() {\n            return this._action;\n        }\n\n        /**\n         * Sets the `target` property using an element\n         * that will be have its content copied.\n         * @param {Element} target\n         */\n\n    }, {\n        key: 'target',\n        set: function set(target) {\n            if (target !== undefined) {\n                if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                    if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                    }\n\n                    if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                    }\n\n                    this._target = target;\n                } else {\n                    throw new Error('Invalid \"target\" value, use a valid Element');\n                }\n            }\n        }\n\n        /**\n         * Gets the `target` property.\n         * @return {String|HTMLElement}\n         */\n        ,\n        get: function get() {\n            return this._target;\n        }\n    }]);\n\n    return ClipboardAction;\n}();\n\nmodule.exports = ClipboardAction;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar is = __webpack_require__(5);\nvar delegate = __webpack_require__(6);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar closest = __webpack_require__(7);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ })\n/******/ ]);\n});\n\n//# sourceURL=webpack:///./node_modules/clipboard/dist/clipboard.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/ThorIOClient.js":
/*!***********************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/ThorIOClient.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ThorIOClient;\n(function (ThorIOClient) {\n    var BinaryMessage = /** @class */ (function () {\n        function BinaryMessage(message, arrayBuffer) {\n            this.arrayBuffer = arrayBuffer;\n            this.header = new Uint8Array(ThorIOClient.Utils.longToArray(message.length));\n            this.Buffer = this.joinBuffers(this.joinBuffers(this.header.buffer, ThorIOClient.Utils.stingToBuffer(message).buffer), arrayBuffer);\n        }\n        BinaryMessage.fromArrayBuffer = function (buffer) {\n            var bytes = new Uint8Array(buffer);\n            var header = bytes.slice(0, 8);\n            var payloadLength = ThorIOClient.Utils.arrayToLong(header);\n            var start = header.byteLength + payloadLength;\n            var bytesMessage = bytes.slice(header.byteLength, start);\n            var stop = buffer.byteLength - start;\n            var messageBuffer = bytes.slice(start, stop);\n            var message = JSON.parse(String.fromCharCode.apply(null, new Uint16Array(bytesMessage)));\n            return new Message(message.T, message.D, message.C, messageBuffer);\n        };\n        BinaryMessage.prototype.joinBuffers = function (a, b) {\n            var newBuffer = new Uint8Array(a.byteLength + b.byteLength);\n            newBuffer.set(new Uint8Array(a), 0);\n            newBuffer.set(new Uint8Array(b), a.byteLength);\n            return newBuffer.buffer;\n        };\n        return BinaryMessage;\n    }());\n    ThorIOClient.BinaryMessage = BinaryMessage;\n    var Message = /** @class */ (function () {\n        function Message(topic, object, controller, buffer) {\n            this.D = object;\n            this.T = topic;\n            this.C = controller;\n            this.B = buffer;\n        }\n        Object.defineProperty(Message.prototype, \"JSON\", {\n            get: function () {\n                return {\n                    T: this.T,\n                    D: JSON.stringify(this.D),\n                    C: this.C\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ;\n        Message.prototype.toString = function () {\n            return JSON.stringify(this.JSON);\n        };\n        Message.fromArrayBuffer = function (buffer) {\n            return ThorIOClient.BinaryMessage.fromArrayBuffer(buffer);\n        };\n        return Message;\n    }());\n    ThorIOClient.Message = Message;\n    var PeerConnection = /** @class */ (function () {\n        function PeerConnection() {\n        }\n        return PeerConnection;\n    }());\n    ThorIOClient.PeerConnection = PeerConnection;\n    var WebRTCConnection = /** @class */ (function () {\n        function WebRTCConnection(id, rtcPeerConnection) {\n            this.id = id;\n            this.RTCPeer = rtcPeerConnection;\n            this.stream = new MediaStream();\n        }\n        return WebRTCConnection;\n    }());\n    ThorIOClient.WebRTCConnection = WebRTCConnection;\n    var Recorder = /** @class */ (function () {\n        function Recorder(stream, mimeType, ignoreMutedMedia) {\n            var _this = this;\n            this.stream = stream;\n            this.mimeType = mimeType;\n            this.ignoreMutedMedia = ignoreMutedMedia;\n            this.recorder = new MediaRecorder(stream, { mimeType: mimeType, ignoreMutedMedia: ignoreMutedMedia });\n            this.recorder.onstop = function (event) {\n                _this.handleStop(event);\n            };\n            this.recorder.ondataavailable = function (event) {\n                _this.handleDataAvailable(event);\n            };\n        }\n        Recorder.prototype.handleStop = function (event) {\n            this.IsRecording = false;\n            var blob = new Blob(this.blobs, { type: this.mimeType });\n            this.OnRecordComplated.apply(event, [blob, URL.createObjectURL(blob)]);\n        };\n        Recorder.prototype.OnRecordComplated = function (blob, blobUrl) { };\n        Recorder.prototype.handleDataAvailable = function (event) {\n            if (event.data.size > 0) {\n                this.blobs.push(event.data);\n            }\n        };\n        Recorder.prototype.IsTypeSupported = function (type) {\n            throw \"not yet implemented\";\n        };\n        Recorder.prototype.GetStats = function () {\n            return {\n                videoBitsPerSecond: this.recorder.videoBitsPerSecond,\n                audioBitsPerSecond: this.recorder.audioBitsPerSecond\n            };\n        };\n        Recorder.prototype.Stop = function () {\n            this.recorder.stop();\n        };\n        Recorder.prototype.Start = function (ms) {\n            this.blobs = new Array();\n            if (this.IsRecording) {\n                this.Stop();\n                return;\n            }\n            this.blobs.length = 0;\n            this.IsRecording = true;\n            this.recorder.start(ms || 100);\n        };\n        return Recorder;\n    }());\n    ThorIOClient.Recorder = Recorder;\n    var PeerChannel = /** @class */ (function () {\n        function PeerChannel(peerId, dataChannel, label) {\n            this.peerId = peerId;\n            this.dataChannel = dataChannel;\n            this.label = label; // name\n        }\n        return PeerChannel;\n    }());\n    ThorIOClient.PeerChannel = PeerChannel;\n    var DataChannel = /** @class */ (function () {\n        function DataChannel(name, listeners) {\n            this.listeners = listeners || new Array();\n            this.PeerChannels = new Array();\n            this.Name = name;\n        }\n        DataChannel.prototype.On = function (topic, fn) {\n            var listener = new ThorIOClient.Listener(topic, fn);\n            this.listeners.push(listener);\n            return listener;\n        };\n        ;\n        DataChannel.prototype.OnOpen = function (event, peerId) { };\n        ;\n        DataChannel.prototype.OnClose = function (event, peerId) { };\n        DataChannel.prototype.OnMessage = function (event) {\n            var msg = JSON.parse(event.data);\n            var listener = this.findListener(msg.T);\n            if (listener)\n                listener.fn.apply(this, [JSON.parse(msg.D)]);\n        };\n        DataChannel.prototype.Close = function () {\n            this.PeerChannels.forEach(function (pc) {\n                pc.dataChannel.close();\n            });\n        };\n        DataChannel.prototype.findListener = function (topic) {\n            var listener = this.listeners.filter(function (pre) {\n                return pre.topic === topic;\n            });\n            return listener[0];\n        };\n        DataChannel.prototype.Off = function (topic) {\n            var index = this.listeners.indexOf(this.findListener(topic));\n            if (index >= 0)\n                this.listeners.splice(index, 1);\n        };\n        ;\n        DataChannel.prototype.Invoke = function (topic, data, controller) {\n            var _this = this;\n            this.PeerChannels.forEach(function (channel) {\n                if (channel.dataChannel.readyState === \"open\") {\n                    channel.dataChannel.send(new ThorIOClient.Message(topic, data, _this.Name).toString());\n                }\n            });\n            return this;\n        };\n        DataChannel.prototype.AddPeerChannel = function (pc) {\n            this.PeerChannels.push(pc);\n        };\n        DataChannel.prototype.RemovePeerChannel = function (id, dataChannel) {\n            var match = this.PeerChannels.filter(function (p) {\n                return p.peerId === id;\n            })[0];\n            var index = this.PeerChannels.indexOf(match);\n            if (index > -1)\n                this.PeerChannels.splice(index, 1);\n        };\n        return DataChannel;\n    }());\n    ThorIOClient.DataChannel = DataChannel;\n    var BandwidthConstraints = /** @class */ (function () {\n        function BandwidthConstraints(videobandwidth, audiobandwidth) {\n            this.videobandwidth = videobandwidth;\n            this.audiobandwidth = audiobandwidth;\n        }\n        return BandwidthConstraints;\n    }());\n    ThorIOClient.BandwidthConstraints = BandwidthConstraints;\n    var WebRTC = /** @class */ (function () {\n        function WebRTC(brokerProxy, rtcConfig) {\n            var _this = this;\n            this.brokerProxy = brokerProxy;\n            this.rtcConfig = rtcConfig;\n            this.getPeerIndex = function (id) {\n                return this.Peers.findIndex(function (pre) { return pre.id === id; });\n            };\n            this.Errors = new Array();\n            this.DataChannels = new Array();\n            this.Peers = new Array();\n            this.LocalStreams = new Array();\n            this.signalHandlers();\n            brokerProxy.On(\"contextCreated\", function (peer) {\n                _this.LocalPeerId = peer.peerId;\n                _this.Context = peer.context;\n                _this.OnContextCreated(peer);\n            });\n            brokerProxy.On(\"contextChanged\", function (context) {\n                _this.Context = context;\n                _this.OnContextChanged(context);\n            });\n            brokerProxy.On(\"connectTo\", function (peers) {\n                _this.OnConnectTo(peers);\n            });\n        }\n        WebRTC.prototype.setBandwithConstraints = function (videobandwidth, audiobandwidth) {\n            this.bandwidthConstraints = new BandwidthConstraints(videobandwidth, audiobandwidth);\n        };\n        WebRTC.prototype.setMediaBitrates = function (sdp) {\n            return this.setMediaBitrate(this.setMediaBitrate(sdp, \"video\", this.bandwidthConstraints.videobandwidth), \"audio\", this.bandwidthConstraints.audiobandwidth);\n        };\n        WebRTC.prototype.setMediaBitrate = function (sdp, media, bitrate) {\n            var lines = sdp.split(\"\\n\");\n            var line = -1;\n            for (var i = 0; i < lines.length; i++) {\n                if (lines[i].indexOf(\"m=\" + media) === 0) {\n                    line = i;\n                    break;\n                }\n            }\n            if (line === -1) {\n                return sdp;\n            }\n            line++;\n            while (lines[line].indexOf(\"i=\") === 0 || lines[line].indexOf(\"c=\") === 0) {\n                line++;\n            }\n            if (lines[line].indexOf(\"b\") === 0) {\n                lines[line] = \"b=AS:\" + bitrate;\n                return lines.join(\"\\n\");\n            }\n            var newLines = lines.slice(0, line);\n            newLines.push(\"b=AS:\" + bitrate);\n            newLines = newLines.concat(lines.slice(line, lines.length));\n            return newLines.join(\"\\n\");\n        };\n        WebRTC.prototype.CreateDataChannel = function (name) {\n            var channel = new DataChannel(name);\n            this.DataChannels.push(channel);\n            return channel;\n        };\n        WebRTC.prototype.RemoveDataChannel = function (name) {\n            var match = this.DataChannels.filter(function (p) { return p.Name === name; })[0];\n            this.DataChannels.splice(this.DataChannels.indexOf(match), 1);\n        };\n        WebRTC.prototype.signalHandlers = function () {\n            var _this = this;\n            this.brokerProxy.On(\"contextSignal\", function (signal) {\n                var msg = JSON.parse(signal.message);\n                switch (msg.type) {\n                    case \"offer\":\n                        _this.onOffer(signal);\n                        break;\n                    case \"answer\":\n                        _this.onAnswer(signal);\n                        break;\n                    case \"candidate\":\n                        _this.onCandidate(signal);\n                        break;\n                    default:\n                        // do op\n                        break;\n                }\n            });\n        };\n        WebRTC.prototype.addError = function (err) {\n            this.OnError(err);\n        };\n        WebRTC.prototype.OnConnectTo = function (peerConnections) {\n            this.Connect(peerConnections);\n        };\n        WebRTC.prototype.OnConnected = function (peerId) {\n            this.OnContextConnected(this.findPeerConnection(peerId), this.getPeerConnection(peerId));\n        };\n        WebRTC.prototype.OnDisconnected = function (peerId) {\n            var peerConnection = this.getPeerConnection(peerId);\n            this.OnContextDisconnected(this.findPeerConnection(peerId), peerConnection);\n            peerConnection.close();\n            this.removePeerConnection(peerId);\n        };\n        WebRTC.prototype.onCandidate = function (event) {\n            var _this = this;\n            var msg = JSON.parse(event.message);\n            var candidate = msg.iceCandidate;\n            var pc = this.getPeerConnection(event.sender);\n            pc.addIceCandidate(new RTCIceCandidate(candidate)).then(function () {\n            }).catch(function (err) {\n                _this.addError(err);\n            });\n        };\n        WebRTC.prototype.onAnswer = function (event) {\n            var _this = this;\n            var pc = this.getPeerConnection(event.sender);\n            pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(event.message))).then(function (p) {\n            }).catch(function (err) {\n                _this.addError(err);\n            });\n        };\n        WebRTC.prototype.onOffer = function (event) {\n            var _this = this;\n            var pc = this.getPeerConnection(event.sender);\n            this.LocalStreams.forEach(function (stream) {\n                stream.getTracks().forEach(function (track) {\n                    pc.addTrack(track, stream);\n                });\n            });\n            pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(event.message)));\n            pc.createAnswer({ offerToReceiveAudio: true, offerToReceiveVideo: true }).then(function (description) {\n                pc.setLocalDescription(description).then(function () {\n                    if (_this.bandwidthConstraints)\n                        description.sdp = _this.setMediaBitrates(description.sdp);\n                    var answer = {\n                        sender: _this.LocalPeerId,\n                        recipient: event.sender,\n                        message: JSON.stringify(description)\n                    };\n                    _this.brokerProxy.Invoke(\"contextSignal\", answer);\n                }).catch(function (err) { return _this.addError(err); });\n            }).catch(function (err) { return _this.addError(err); });\n        };\n        WebRTC.prototype.AddLocalStream = function (stream) {\n            this.LocalStreams.push(stream);\n            return this;\n        };\n        WebRTC.prototype.AddIceServer = function (iceServer) {\n            this.rtcConfig.iceServers.push(iceServer);\n            return this;\n        };\n        WebRTC.prototype.removePeerConnection = function (id) {\n            var connection = this.Peers.filter(function (conn) {\n                return conn.id === id;\n            })[0];\n            var index = this.Peers.indexOf(connection);\n            if (index > -1)\n                this.Peers.splice(index, 1);\n        };\n        WebRTC.prototype.createPeerConnection = function (id) {\n            var _this = this;\n            var rtcPeerConnection = new RTCPeerConnection(this.rtcConfig);\n            rtcPeerConnection.onsignalingstatechange = function (state) { };\n            rtcPeerConnection.onicecandidate = function (event) {\n                if (!event || !event.candidate)\n                    return;\n                if (event.candidate) {\n                    var msg = {\n                        sender: _this.LocalPeerId,\n                        recipient: id,\n                        message: JSON.stringify({\n                            type: 'candidate',\n                            iceCandidate: event.candidate\n                        })\n                    };\n                    _this.brokerProxy.Invoke(\"contextSignal\", msg);\n                }\n            };\n            rtcPeerConnection.oniceconnectionstatechange = function (event) {\n                switch (event.target.iceConnectionState) {\n                    case \"connected\":\n                        _this.OnConnected(id);\n                        break;\n                    case \"disconnected\":\n                        _this.OnDisconnected(id);\n                        break;\n                }\n                ;\n            };\n            rtcPeerConnection.ontrack = function (event) {\n                var connection = _this.Peers.filter(function (p) {\n                    return p.id === id;\n                })[0];\n                connection.stream.addTrack(event.track);\n                _this.OnRemoteTrack(event.track, connection);\n            };\n            this.DataChannels.forEach(function (dataChannel) {\n                var pc = new PeerChannel(id, rtcPeerConnection.createDataChannel(dataChannel.Name), dataChannel.Name);\n                dataChannel.AddPeerChannel(pc);\n                rtcPeerConnection.ondatachannel = function (event) {\n                    var channel = event.channel;\n                    channel.onopen = function (event) {\n                        dataChannel.OnOpen(event, id);\n                    };\n                    channel.onclose = function (event) {\n                        dataChannel.RemovePeerChannel(id, event.target);\n                        dataChannel.OnClose(event, id);\n                    };\n                    channel.onmessage = function (message) {\n                        dataChannel.OnMessage(message);\n                    };\n                };\n            });\n            return rtcPeerConnection;\n        };\n        WebRTC.prototype.findPeerConnection = function (id) {\n            var i = this.getPeerIndex(id);\n            return this.Peers[i];\n        };\n        WebRTC.prototype.reconnectAll = function () {\n            var _this = this;\n            var peers = this.Peers.map(function (peer) {\n                var p = new PeerConnection();\n                p.peerId = peer.id;\n                p.context = _this.Context;\n                return p;\n            });\n            this.Peers = new Array();\n            this.Connect(peers);\n            return peers;\n        };\n        WebRTC.prototype.getPeerConnection = function (id) {\n            var match = this.Peers.filter(function (connection) {\n                return connection.id === id;\n            });\n            if (match.length === 0) {\n                var pc = new WebRTCConnection(id, this.createPeerConnection(id));\n                this.Peers.push(pc);\n                return pc.RTCPeer;\n            }\n            return match[0].RTCPeer;\n        };\n        WebRTC.prototype.createOffer = function (peer) {\n            var _this = this;\n            var peerConnection = this.createPeerConnection(peer.peerId);\n            this.LocalStreams.forEach(function (stream) {\n                //peerConnection.addStream(stream);\n                stream.getTracks().forEach(function (track) {\n                    peerConnection.addTrack(track, stream);\n                });\n                _this.OnLocalStream(stream);\n            });\n            peerConnection.createOffer({ offerToReceiveAudio: true, offerToReceiveVideo: true }).then(function (description) {\n                peerConnection.setLocalDescription(description).then(function () {\n                    if (_this.bandwidthConstraints)\n                        description.sdp = _this.setMediaBitrates(description.sdp);\n                    var offer = {\n                        sender: _this.LocalPeerId,\n                        recipient: peer.peerId,\n                        message: JSON.stringify(description)\n                    };\n                    _this.brokerProxy.Invoke(\"contextSignal\", offer);\n                }).catch(function (err) {\n                    _this.addError(err);\n                });\n            }).catch(function (err) {\n                _this.addError(err);\n            });\n            return peerConnection;\n        };\n        WebRTC.prototype.Disconnect = function () {\n            this.Peers.forEach(function (connection) {\n                connection.RTCPeer.close();\n            });\n            this.ChangeContext(Math.random().toString(36).substring(2));\n        };\n        WebRTC.prototype.DisconnectPeer = function (id) {\n            var peer = this.findPeerConnection(id);\n            peer.RTCPeer.close();\n        };\n        WebRTC.prototype.Connect = function (peerConnections) {\n            var _this = this;\n            peerConnections.forEach(function (peerConnection) {\n                var pc = new WebRTCConnection(peerConnection.peerId, _this.createOffer(peerConnection));\n                _this.Peers.push(pc);\n            });\n            return this;\n        };\n        WebRTC.prototype.ChangeContext = function (context) {\n            this.brokerProxy.Invoke(\"changeContext\", { context: context });\n            return this;\n        };\n        WebRTC.prototype.ConnectPeers = function () {\n            this.brokerProxy.Invoke(\"connectContext\", {});\n        };\n        WebRTC.prototype.ConnectContext = function () {\n            this.ConnectPeers();\n        };\n        return WebRTC;\n    }());\n    ThorIOClient.WebRTC = WebRTC;\n    var Factory = /** @class */ (function () {\n        function Factory(url, controllers, params) {\n            var _this = this;\n            this.url = url;\n            this.proxys = new Array();\n            this.ws = new WebSocket(url + this.toQuery(params || {}));\n            this.ws.binaryType = \"arraybuffer\";\n            controllers.forEach(function (alias) {\n                _this.proxys.push(new Proxy(alias, _this.ws));\n            });\n            this.ws.onmessage = function (event) {\n                if (typeof (event.data) !== \"object\") {\n                    var message = JSON.parse(event.data);\n                    _this.GetProxy(message.C).Dispatch(message.T, message.D);\n                }\n                else {\n                    var message = ThorIOClient.BinaryMessage.fromArrayBuffer(event.data);\n                    _this.GetProxy(message.C).Dispatch(message.T, message.D, message.B);\n                }\n            };\n            this.ws.onclose = function (event) {\n                _this.IsConnected = false;\n                _this.OnClose.apply(_this, [event]);\n            };\n            this.ws.onerror = function (error) {\n                _this.OnError.apply(_this, [error]);\n            };\n            this.ws.onopen = function (event) {\n                _this.IsConnected = true;\n                _this.OnOpen.apply(_this, _this.proxys);\n            };\n        }\n        Factory.prototype.toQuery = function (obj) {\n            return \"?\" + Object.keys(obj).map(function (key) { return (encodeURIComponent(key) + \"=\" +\n                encodeURIComponent(obj[key])); }).join(\"&\");\n        };\n        Factory.prototype.Close = function () {\n            this.ws.close();\n        };\n        ;\n        Factory.prototype.GetProxy = function (alias) {\n            var channel = this.proxys.filter(function (pre) { return (pre.alias === alias); });\n            return channel[0];\n        };\n        ;\n        Factory.prototype.RemoveProxy = function (alias) {\n            var index = this.proxys.indexOf(this.GetProxy(alias));\n            this.proxys.splice(index, 1);\n        };\n        Factory.prototype.OnOpen = function (proxys) { };\n        ;\n        Factory.prototype.OnError = function (error) { };\n        Factory.prototype.OnClose = function (event) { };\n        return Factory;\n    }());\n    ThorIOClient.Factory = Factory;\n    var Listener = /** @class */ (function () {\n        function Listener(topic, fn) {\n            this.fn = fn;\n            this.topic = topic;\n            this.count = 0;\n        }\n        return Listener;\n    }());\n    ThorIOClient.Listener = Listener;\n    var Utils = /** @class */ (function () {\n        function Utils() {\n        }\n        Utils.stingToBuffer = function (str) {\n            var len = str.length;\n            var arr = new Array(len);\n            for (var i = 0; i < len; i++) {\n                arr[i] = str.charCodeAt(i) & 0xFF;\n            }\n            return new Uint8Array(arr);\n        };\n        Utils.arrayToLong = function (byteArray) {\n            var value = 0;\n            var byteLength = byteArray.byteLength;\n            for (var i = byteLength - 1; i >= 0; i--) {\n                value = (value * 256) + byteArray[i];\n            }\n            return value;\n        };\n        Utils.longToArray = function (long) {\n            var byteArray = new Uint8Array(8);\n            var byteLength = byteArray.length;\n            for (var index = 0; index < byteLength; index++) {\n                var byte = long & 0xff;\n                byteArray[index] = byte;\n                long = (long - byte) / 256;\n            }\n            return byteArray;\n        };\n        Utils.newGuid = function () {\n            function s4() {\n                return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            }\n            ;\n            return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n        };\n        return Utils;\n    }());\n    ThorIOClient.Utils = Utils;\n    var PropertyMessage = /** @class */ (function () {\n        function PropertyMessage() {\n            this.messageId = ThorIOClient.Utils.newGuid();\n        }\n        return PropertyMessage;\n    }());\n    ThorIOClient.PropertyMessage = PropertyMessage;\n    var Proxy = /** @class */ (function () {\n        function Proxy(alias, ws) {\n            var _this = this;\n            this.alias = alias;\n            this.ws = ws;\n            this.listeners = new Array();\n            this.IsConnected = false;\n            this.On(\"___error\", function (err) {\n                _this.OnError(err);\n            });\n        }\n        Proxy.prototype.OnError = function (event) { };\n        Proxy.prototype.OnOpen = function (event) { };\n        Proxy.prototype.OnClose = function (event) { };\n        Proxy.prototype.Connect = function () {\n            this.ws.send(new ThorIOClient.Message(\"___connect\", {}, this.alias).toString());\n            return this;\n        };\n        ;\n        Proxy.prototype.Close = function () {\n            this.ws.send(new ThorIOClient.Message(\"___close\", {}, this.alias).toString());\n            return this;\n        };\n        ;\n        Proxy.prototype.Subscribe = function (topic, callback) {\n            this.ws.send(new ThorIOClient.Message(\"___subscribe\", {\n                topic: topic,\n                controller: this.alias\n            }, this.alias).toString());\n            return this.On(topic, callback);\n        };\n        ;\n        Proxy.prototype.Unsubscribe = function (topic) {\n            this.ws.send(new ThorIOClient.Message(\"___unsubscribe\", {\n                topic: topic,\n                controller: this.alias\n            }, this.alias).toString());\n        };\n        ;\n        Proxy.prototype.On = function (topic, fn) {\n            var listener = new ThorIOClient.Listener(topic, fn);\n            this.listeners.push(listener);\n            return listener;\n        };\n        ;\n        Proxy.prototype.findListener = function (topic) {\n            var listener = this.listeners.filter(function (pre) {\n                return pre.topic === topic;\n            });\n            return listener[0];\n        };\n        Proxy.prototype.Off = function (topic) {\n            var index = this.listeners.indexOf(this.findListener(topic));\n            if (index >= 0)\n                this.listeners.splice(index, 1);\n        };\n        ;\n        Proxy.prototype.InvokeBinary = function (buffer) {\n            if (buffer instanceof ArrayBuffer) {\n                this.ws.send(buffer);\n                return this;\n            }\n            else {\n                throw (\"parameter provided must be an ArrayBuffer constructed by Client.BinaryMessage\");\n            }\n        };\n        Proxy.prototype.PublishBinary = function (buffer) {\n            if (buffer instanceof ArrayBuffer) {\n                this.ws.send(buffer);\n                return this;\n            }\n            else {\n                throw (\"parameter provided must be an ArrayBuffer constructed by Client.BinaryMessage\");\n            }\n        };\n        Proxy.prototype.Invoke = function (topic, data, controller) {\n            this.ws.send(new ThorIOClient.Message(topic, data, controller || this.alias).toString());\n            return this;\n        };\n        ;\n        Proxy.prototype.Publish = function (topic, data, controller) {\n            this.ws.send(new ThorIOClient.Message(topic, data, controller || this.alias).toString());\n            return this;\n        };\n        ;\n        Proxy.prototype.SetProperty = function (propName, propValue, controller) {\n            this.Invoke(propName, propValue, controller || this.alias);\n            return this;\n        };\n        ;\n        Proxy.prototype.Dispatch = function (topic, data, buffer) {\n            if (topic === \"___open\") {\n                this.IsConnected = true;\n                this.OnOpen(JSON.parse(data));\n                return;\n            }\n            else if (topic === \"___close\") {\n                this.OnClose([JSON.parse(data)]);\n                this.IsConnected = false;\n            }\n            else {\n                var listener = this.findListener(topic);\n                if (listener)\n                    listener.fn(JSON.parse(data), buffer);\n            }\n        };\n        ;\n        return Proxy;\n    }());\n    ThorIOClient.Proxy = Proxy;\n})(ThorIOClient = exports.ThorIOClient || (exports.ThorIOClient = {}));\n//# sourceMappingURL=ThorIOClient.js.map\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/ThorIOClient.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/index.js":
/*!****************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(/*! ./ThorIOClient */ \"./node_modules/thor-io.client-vnext/ThorIOClient.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/index.js?");

/***/ })

/******/ });