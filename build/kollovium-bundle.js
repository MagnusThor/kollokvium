/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./client/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./client/AppDomain.js":
/*!*****************************!*\
  !*** ./client/AppDomain.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n/**\r\n *  Class enebales customization of \"Kollokvium\" for personal / corperate usage\r\n *\r\n * @export\r\n * @class AppDomain\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst appConfig = __webpack_require__(/*! ./settings.json */ \"./client/settings.json\");\r\nclass AppDomain {\r\n    getSlug(value) {\r\n        return `${this.contextPrefix}-${value}`;\r\n    }\r\n    constructor() {\r\n        this.domain = appConfig.domain;\r\n        this.contextPrefix = appConfig.contextPrefix;\r\n        this.serverUrl = appConfig.serverUrl;\r\n        this.version = appConfig.version;\r\n    }\r\n}\r\nexports.AppDomain = AppDomain;\r\n\n\n//# sourceURL=webpack:///./client/AppDomain.js?");

/***/ }),

/***/ "./client/AppParticipant.js":
/*!**********************************!*\
  !*** ./client/AppParticipant.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst image_capture_1 = __webpack_require__(/*! image-capture */ \"./node_modules/image-capture/src/imagecapture.js\");\r\nclass AppParticipant {\r\n    constructor(id) {\r\n        this.id = id;\r\n        this.videoTracks = new Array();\r\n        this.audioTracks = new Array();\r\n    }\r\n    captureImage() {\r\n        let track = this.videoTracks[0];\r\n        const img = document.createElement('img');\r\n        let imageCapture = new image_capture_1.ImageCapture(track);\r\n        return new Promise((resolve, reject) => {\r\n            imageCapture.grabFrame()\r\n                .then(blob => {\r\n                resolve(blob);\r\n            })\r\n                .catch(reject);\r\n        });\r\n    }\r\n    addVideoTrack(t) {\r\n        this.videoTracks.push(t);\r\n        let stream = new MediaStream([t]);\r\n        t.onended = () => {\r\n            // todo: would be an delagated event\r\n            this.onVideoTrackLost(this.id, stream, t);\r\n        };\r\n        this.onVideoTrackAdded(this.id, stream, t);\r\n    }\r\n    addAudioTrack(t) {\r\n        this.audioTracks.push(t);\r\n        let audio = new Audio();\r\n        audio.classList.add(\".p\" + this.id);\r\n        audio.autoplay = true;\r\n        audio.srcObject = new MediaStream([t]);\r\n        return audio;\r\n    }\r\n    addTrack(t, cb) {\r\n        if (t.kind == \"video\") {\r\n            this.addVideoTrack(t);\r\n        }\r\n        else {\r\n            let a = this.addAudioTrack(t);\r\n            if (cb)\r\n                cb(a);\r\n        }\r\n        //t.kind == \"video\" ? this.addVideoTrack(t) : this.addAudioTrack(t);\r\n    }\r\n}\r\nexports.AppParticipant = AppParticipant;\r\n\n\n//# sourceURL=webpack:///./client/AppParticipant.js?");

/***/ }),

/***/ "./client/Components/AppComponent.js":
/*!*******************************************!*\
  !*** ./client/Components/AppComponent.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass AppComponent {\r\n    static toDOM(html) {\r\n        var d = document, i, a = d.createElement(\"div\"), b = d.createDocumentFragment();\r\n        a.innerHTML = html;\r\n        while (i = a.firstChild)\r\n            b.appendChild(i);\r\n        return b;\r\n    }\r\n    constructor() {\r\n    }\r\n}\r\nexports.AppComponent = AppComponent;\r\n\n\n//# sourceURL=webpack:///./client/Components/AppComponent.js?");

/***/ }),

/***/ "./client/Components/AppComponentToaster.js":
/*!**************************************************!*\
  !*** ./client/Components/AppComponentToaster.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst AppComponent_1 = __webpack_require__(/*! ./AppComponent */ \"./client/Components/AppComponent.js\");\r\nclass AppComponentToaster extends AppComponent_1.AppComponent {\r\n    /**\r\n     *\r\n     *\r\n     * @static\r\n     * @returns {HTMLElement}\r\n     * @memberof AppComponentToaster\r\n     */\r\n    static dungeonToaster(caption, message) {\r\n        let p = `\n        <div role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\" class=\"toast\" data-autohide=\"false\">\n        <div class=\"toast-header\">\n            <i class=\"fas fa-info-circle\"></i>&nbsp;\n              <strong class=\"mr-auto\">${caption}</strong>         \n          <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"toast-body\">  \n            <p>${message}</p>\n            <button class=\"btn btn-primary btn-sm accept\"> Accept</button>\n            <button class=\"btn btn-danger btn-sm\" decline>Decline</button>\n        </div>\n      </div>\n    `;\r\n        return this.toDOM(p);\r\n    }\r\n}\r\nexports.AppComponentToaster = AppComponentToaster;\r\n\n\n//# sourceURL=webpack:///./client/Components/AppComponentToaster.js?");

/***/ }),

/***/ "./client/Components/DungeonComponent.js":
/*!***********************************************!*\
  !*** ./client/Components/DungeonComponent.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst AppComponent_1 = __webpack_require__(/*! ./AppComponent */ \"./client/Components/AppComponent.js\");\r\nclass DungeonComponent extends AppComponent_1.AppComponent {\r\n    constructor(id) {\r\n        super();\r\n        this.id = id;\r\n        this.audio = document.createElement(\"audio\");\r\n        this.participants = new Array();\r\n    }\r\n    removeParticipant(id) {\r\n        let index = this.participants.findIndex((p) => {\r\n            return p.id == id;\r\n        });\r\n        this.participants.splice(index, 1);\r\n        // remove from ui;\r\n        document.querySelector(\"li#d-\" + id).remove();\r\n    }\r\n    addDungeonParticipant(participant) {\r\n        if (!participant)\r\n            throw \"cannot add participant\";\r\n        let match = this.participants.find((p) => {\r\n            return p.id == participant.id;\r\n        });\r\n        if (!match) {\r\n            this.participants.push(participant);\r\n            console.log(`added a participant to dungeon ${this.id}`, participant);\r\n            this.addCanvas(participant);\r\n        }\r\n    }\r\n    // dungeonParticipant(id: string): void {\r\n    //     let index = this.participants.findIndex((p) => {\r\n    //         return p.id == this.id;\r\n    //     });\r\n    //     this.participants.splice(index, 1);\r\n    // }\r\n    setState(state) {\r\n        this.isActive = state;\r\n    }\r\n    addCanvas(p) {\r\n        let li = document.createElement(\"li\");\r\n        li.id = \"d-\" + p.id;\r\n        p.captureImage().then((i) => {\r\n            let canvas = document.createElement(\"canvas\");\r\n            canvas.id = \"d\" + p.id;\r\n            canvas.height = i.height;\r\n            canvas.width = i.width;\r\n            let ctx = canvas.getContext(\"2d\");\r\n            ctx.drawImage(i, 0, 0, i.width, i.height);\r\n            canvas.dataset.peerId = p.id;\r\n            li.append(canvas);\r\n            document.querySelector(\"#dungeon-\" + this.id + \" ul\").append(li);\r\n        }).catch(console.error);\r\n    }\r\n    destroy(cb) {\r\n        let peers = this.participants.map((p) => {\r\n            return p.id;\r\n        });\r\n        cb(peers);\r\n    }\r\n    render(el) {\r\n        let html = `\n        <div class=\"dungeon\" id=\"dungeon-${this.id}\">\n        <div class=\"dungeon-header\">\n        Dungeon ${this.id}\n        <i class=\"fas fa-sign-out-alt\"></i>\n       \n         </div>\n        <div class=\"dungeon\">\n        <ul class=\"dungeon-thumbs\">     \n        </ul>\n         </div>\n         </div>\n         `;\r\n        el.appendChild(AppComponent_1.AppComponent.toDOM(html));\r\n    }\r\n    ;\r\n}\r\nexports.DungeonComponent = DungeonComponent;\r\n\n\n//# sourceURL=webpack:///./client/Components/DungeonComponent.js?");

/***/ }),

/***/ "./client/Helpers/DetectResolutions.js":
/*!*********************************************!*\
  !*** ./client/Helpers/DetectResolutions.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass DetectResolutions {\r\n    static getCandidate(label) {\r\n        let match = this.candidates.find((c) => {\r\n            return c.label === label;\r\n        });\r\n        return match;\r\n    }\r\n    static tryCandidate(deviceId, candidate, cb) {\r\n        let constraints = {\r\n            audio: false,\r\n            video: {\r\n                deviceId: deviceId ? { exact: deviceId } : undefined,\r\n                width: { exact: candidate.width },\r\n                height: { exact: candidate.height }\r\n            }\r\n        };\r\n        navigator.mediaDevices.getUserMedia(constraints)\r\n            .then(((mediaStream) => {\r\n            cb(candidate);\r\n        }))\r\n            .catch((error) => {\r\n            console.log('non working candidate', candidate);\r\n        });\r\n    }\r\n    static testResolutions(deviceId, cb) {\r\n        let c = 0;\r\n        this.candidates.forEach((option) => {\r\n            window.setTimeout(() => {\r\n                this.tryCandidate(deviceId, this.candidates[c], cb);\r\n                c++;\r\n            }, 200);\r\n        });\r\n    }\r\n}\r\nDetectResolutions.candidates = [\r\n    {\r\n        \"label\": \"4K(UHD)\",\r\n        \"width\": 3840,\r\n        \"height\": 2160,\r\n        \"ratio\": \"16:9\"\r\n    },\r\n    {\r\n        \"label\": \"1080p(FHD)\",\r\n        \"width\": 1920,\r\n        \"height\": 1080,\r\n        \"ratio\": \"16:9\"\r\n    },\r\n    {\r\n        \"label\": \"UXGA\",\r\n        \"width\": 1600,\r\n        \"height\": 1200,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"720p(HD)\",\r\n        \"width\": 1280,\r\n        \"height\": 720,\r\n        \"ratio\": \"16:9\"\r\n    },\r\n    {\r\n        \"label\": \"SVGA\",\r\n        \"width\": 800,\r\n        \"height\": 600,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"VGA\",\r\n        \"width\": 640,\r\n        \"height\": 480,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"360p(nHD)\",\r\n        \"width\": 640,\r\n        \"height\": 360,\r\n        \"ratio\": \"16:9\"\r\n    },\r\n    {\r\n        \"label\": \"CIF\",\r\n        \"width\": 352,\r\n        \"height\": 288,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"QVGA\",\r\n        \"width\": 320,\r\n        \"height\": 240,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"QCIF\",\r\n        \"width\": 176,\r\n        \"height\": 144,\r\n        \"ratio\": \"4:3\"\r\n    },\r\n    {\r\n        \"label\": \"QQVGA\",\r\n        \"width\": 160,\r\n        \"height\": 120,\r\n        \"ratio\": \"4:3\"\r\n    }\r\n];\r\nexports.DetectResolutions = DetectResolutions;\r\n\n\n//# sourceURL=webpack:///./client/Helpers/DetectResolutions.js?");

/***/ }),

/***/ "./client/Helpers/ReadFile.js":
/*!************************************!*\
  !*** ./client/Helpers/ReadFile.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ReadFile {\r\n    static read(f) {\r\n        return new Promise((resolve, reject) => {\r\n            let reader = new FileReader();\r\n            reader.onerror = reject;\r\n            reader.onload = (function (tf) {\r\n                return function (e) {\r\n                    resolve({ buffer: e.target.result, tf: tf });\r\n                };\r\n            })(f);\r\n            reader.readAsArrayBuffer(f);\r\n        });\r\n    }\r\n}\r\nexports.ReadFile = ReadFile;\r\n\n\n//# sourceURL=webpack:///./client/Helpers/ReadFile.js?");

/***/ }),

/***/ "./client/SlugHistory.js":
/*!*******************************!*\
  !*** ./client/SlugHistory.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass SlugHistory {\r\n    constructor() {\r\n    }\r\n    getHistory() {\r\n        return this.history;\r\n    }\r\n    addToHistory(slug) {\r\n        if (this.history.includes(slug))\r\n            return;\r\n        this.history.push(slug);\r\n    }\r\n    clearHistory() {\r\n        this.history = new Array();\r\n    }\r\n}\r\nexports.SlugHistory = SlugHistory;\r\n\n\n//# sourceURL=webpack:///./client/SlugHistory.js?");

/***/ }),

/***/ "./client/UserSettings.js":
/*!********************************!*\
  !*** ./client/UserSettings.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst SlugHistory_1 = __webpack_require__(/*! ./SlugHistory */ \"./client/SlugHistory.js\");\r\nconst DetectResolutions_1 = __webpack_require__(/*! ./Helpers/DetectResolutions */ \"./client/Helpers/DetectResolutions.js\");\r\nclass UserSettings {\r\n    constructor() {\r\n        this.slugHistory = new SlugHistory_1.SlugHistory();\r\n        const ls = localStorage.getItem(\"settings\");\r\n        if (ls) {\r\n            let settings = JSON.parse(ls);\r\n            this.audioDevice = settings.audioDevice;\r\n            this.videoDevice = settings.videoDevice;\r\n            this.videoResolution = settings.videoResolution;\r\n            this.nickname = settings.nickname;\r\n            this.slugHistory.history = settings.slugHistory;\r\n            this.showQuickStart = settings.showQuickStart;\r\n        }\r\n        else {\r\n            this.slugHistory.history = new Array();\r\n            this.nickname = Math.random().toString(36).substring(8);\r\n            this.audioDevice = \"\";\r\n            this.videoDevice = \"\";\r\n            this.videoResolution = \"\";\r\n            this.showQuickStart = true;\r\n        }\r\n    }\r\n    saveSetting() {\r\n        const data = {\r\n            slugHistory: this.slugHistory.history,\r\n            videoDevice: this.videoDevice,\r\n            audioDevice: this.audioDevice,\r\n            videoResolution: this.videoResolution,\r\n            nickname: this.nickname,\r\n            showQuickStart: this.showQuickStart,\r\n        };\r\n        localStorage.setItem(\"settings\", JSON.stringify(data));\r\n    }\r\n    createConstraints(candidate) {\r\n        let constraints;\r\n        if (candidate.length === 0) {\r\n            constraints = {\r\n                video: {\r\n                    width: { min: 640, ideal: 1920 },\r\n                    height: { min: 400, ideal: 1080 }\r\n                }, audio: true,\r\n            };\r\n        }\r\n        else {\r\n            const preferedResolution = DetectResolutions_1.DetectResolutions.getCandidate(candidate);\r\n            constraints = {\r\n                audio: true,\r\n                video: {\r\n                    width: { exact: preferedResolution.width },\r\n                    height: { exact: preferedResolution.height }\r\n                }\r\n            };\r\n        }\r\n        ;\r\n        if (this.audioDevice.length > 0) {\r\n            constraints.video[\"deviceId\"] = this.audioDevice;\r\n        }\r\n        if (this.videoDevice.length > 0) {\r\n            constraints.video[\"deviceId\"] = this.videoDevice;\r\n        }\r\n        console.log(constraints);\r\n        return constraints;\r\n    }\r\n}\r\nUserSettings.defaultConstraints = {\r\n    video: {\r\n        width: { min: 640, ideal: 1280 },\r\n        height: { min: 400, ideal: 720 }\r\n    }, audio: true,\r\n};\r\nexports.UserSettings = UserSettings;\r\n\n\n//# sourceURL=webpack:///./client/UserSettings.js?");

/***/ }),

/***/ "./client/app.js":
/*!***********************!*\
  !*** ./client/app.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst thor_io_client_vnext_1 = __webpack_require__(/*! thor-io.client-vnext */ \"./node_modules/thor-io.client-vnext/index.js\");\r\nconst AppParticipant_1 = __webpack_require__(/*! ./AppParticipant */ \"./client/AppParticipant.js\");\r\nconst ReadFile_1 = __webpack_require__(/*! ./Helpers/ReadFile */ \"./client/Helpers/ReadFile.js\");\r\nconst UserSettings_1 = __webpack_require__(/*! ./UserSettings */ \"./client/UserSettings.js\");\r\nconst AppDomain_1 = __webpack_require__(/*! ./AppDomain */ \"./client/AppDomain.js\");\r\nconst mediastreamblender_1 = __webpack_require__(/*! mediastreamblender */ \"./node_modules/mediastreamblender/index.js\");\r\nconst DetectResolutions_1 = __webpack_require__(/*! ./Helpers/DetectResolutions */ \"./client/Helpers/DetectResolutions.js\");\r\nconst AppComponentToaster_1 = __webpack_require__(/*! ./Components/AppComponentToaster */ \"./client/Components/AppComponentToaster.js\");\r\nconst DungeonComponent_1 = __webpack_require__(/*! ./Components/DungeonComponent */ \"./client/Components/DungeonComponent.js\");\r\nclass App {\r\n    /**\r\n     * Creates an instance of App - Kollokvium\r\n     * @memberof App\r\n     */\r\n    constructor() {\r\n        /**\r\n         * PeerConnection configuration\r\n         *\r\n         * @memberof App\r\n         */\r\n        this.rtcConfig = {\r\n            \"sdpSemantics\": 'plan-b',\r\n            \"iceTransports\": 'all',\r\n            \"rtcpMuxPolicy\": \"require\",\r\n            \"bundlePolicy\": \"max-bundle\",\r\n            \"iceServers\": [\r\n                {\r\n                    \"urls\": \"stun:stun.l.google.com:19302\"\r\n                }\r\n            ]\r\n        };\r\n        // see settings.json\r\n        this.appDomain = new AppDomain_1.AppDomain();\r\n        this.mediaStreamBlender = new mediastreamblender_1.MediaStreamBlender();\r\n        // hook up listeners for MediaBlender\r\n        let watermark = document.querySelector(\"#watermark\");\r\n        this.mediaStreamBlender.onFrameRendered = (ctx) => {\r\n            // postprocess , add a watermark image to recorder.      \r\n            ctx.save();\r\n            ctx.filter = \"invert()\";\r\n            ctx.drawImage(watermark, 10, 10, 100, 100);\r\n            ctx.restore();\r\n        };\r\n        this.mediaStreamBlender.onTrack = () => {\r\n            this.audioNode.srcObject = this.mediaStreamBlender.getRemoteAudioStream();\r\n        };\r\n        this.mediaStreamBlender.onRecordingStart = () => {\r\n            this.sendMessage(this.userSettings.nickname, \"I'm now recording the session.\");\r\n        };\r\n        this.mediaStreamBlender.onRecordingEnded = (blobUrl) => {\r\n            let p = document.createElement(\"p\");\r\n            const download = document.createElement(\"a\");\r\n            download.setAttribute(\"href\", blobUrl);\r\n            download.textContent = \"Your recording has ended, here is the file. ( click to download )\";\r\n            download.setAttribute(\"download\", `${Math.random().toString(36).substring(6)}.webm`);\r\n            p.append(download);\r\n            document.querySelector(\"#recorder-download\").append(p);\r\n            $(\"#recorder-result\").modal(\"show\");\r\n        };\r\n        this.mediaStreamBlender.onTrackEnded = () => {\r\n            this.audioNode.srcObject = this.mediaStreamBlender.getRemoteAudioStream();\r\n            this.mediaStreamBlender.refreshCanvas();\r\n        };\r\n        document.querySelector(\"#appDomain\").textContent = this.appDomain.domain;\r\n        document.querySelector(\"#appVersion\").textContent = this.appDomain.version;\r\n        this.userSettings = new UserSettings_1.UserSettings();\r\n        //Handle modal quick start early, if its been dismissed hide straight away\r\n        if (this.userSettings.showQuickStart)\r\n            document.querySelector(\"#quick-start-container\").style.display = \"block\";\r\n        else\r\n            document.querySelector(\"#quick-start-container\").style.display = \"none\";\r\n        // Remove screenshare on tables / mobile hack..\r\n        if (typeof window.orientation !== 'undefined') {\r\n            document.querySelector(\".only-desktop\").classList.add(\"hide\");\r\n        }\r\n        // if (!location.href.includes(\"https://\"))\r\n        this.peerId = null;\r\n        this.numOfChatMessagesUnread = 0;\r\n        this.participants = new Map();\r\n        this.dungeons = new Map();\r\n        this.Slug = location.hash.replace(\"#\", \"\");\r\n        this.fullScreenVideo = document.querySelector(\".full\");\r\n        this.shareContainer = document.querySelector(\"#share-container\");\r\n        this.shareFile = document.querySelector(\"#share-file\");\r\n        this.videoGrid = document.querySelector(\"#video-grid\");\r\n        this.audioNode = document.querySelector(\"#remtote-audio-node audio\");\r\n        let slug = document.querySelector(\"#slug\");\r\n        let startButton = document.querySelector(\"#joinconference\");\r\n        let chatWindow = document.querySelector(\".chat\");\r\n        let chatMessage = document.querySelector(\"#chat-message\");\r\n        let chatMessages = document.querySelector(\"#chatmessages\");\r\n        let muteAudio = document.querySelector(\"#mute-local-audio\");\r\n        let muteVideo = document.querySelector(\"#mute-local-video\");\r\n        let muteSpeakers = document.querySelector(\"#mute-speakers\");\r\n        let startScreenShare = document.querySelector(\"#share-screen\");\r\n        let settings = document.querySelector(\"#settings\");\r\n        let saveSettings = document.querySelector(\"#save-settings\");\r\n        let unreadBadge = document.querySelector(\"#unread-messages\");\r\n        let generateSlug = document.querySelector(\"#generate-slug\");\r\n        let nickname = document.querySelector(\"#txt-nick\");\r\n        let videoDevice = document.querySelector(\"#sel-video\");\r\n        let audioDevice = document.querySelector(\"#sel-audio\");\r\n        let videoResolution = document.querySelector(\"#sel-video-res\");\r\n        // just set the value to saved key, as user needs to scan..\r\n        let closeQuickstartButton = document.querySelector(\"#close-quick-start\");\r\n        let helpButton = document.querySelector(\"#help\");\r\n        document.querySelector(\"#sel-video-res option\").textContent = \"Using dynamic resolution\";\r\n        let toogleRecord = document.querySelector(\".record\");\r\n        let testResolutions = document.querySelector(\"#test-resolutions\");\r\n        nickname.value = this.userSettings.nickname;\r\n        this.videoGrid.addEventListener(\"click\", () => {\r\n            this.videoGrid.classList.remove(\"blur\");\r\n            this.audioNode.muted = !this.audioNode.muted;\r\n        });\r\n        toogleRecord.addEventListener(\"click\", () => {\r\n            toogleRecord.classList.toggle(\"flash\");\r\n            this.mediaStreamBlender.render(25);\r\n            this.mediaStreamBlender.record();\r\n        });\r\n        testResolutions.addEventListener(\"click\", () => {\r\n            this.testCameraResolutions();\r\n        });\r\n        this.getMediaDevices().then((devices) => {\r\n            let inputOnly = devices.filter(((d) => {\r\n                return d.kind.indexOf(\"input\") > 0;\r\n            }));\r\n            inputOnly.forEach((d, index) => {\r\n                let option = document.createElement(\"option\");\r\n                option.textContent = d.label || `Device #${index} (name unknown)`;\r\n                option.value = d.deviceId;\r\n                if (d.kind == \"videoinput\") {\r\n                    if (option.value == this.userSettings.videoDevice)\r\n                        option.selected = true;\r\n                    document.querySelector(\"#sel-video\").append(option);\r\n                }\r\n                else {\r\n                    if (option.value == this.userSettings.audioDevice)\r\n                        option.selected = true;\r\n                    document.querySelector(\"#sel-audio\").append(option);\r\n                }\r\n            });\r\n            devices.filter(((d) => {\r\n                return d.kind.indexOf(\"output\") > 0;\r\n            })).forEach(((d) => {\r\n                let option = document.createElement(\"option\");\r\n                option.textContent = d.label || d.kind;\r\n                option.setAttribute(\"value\", d.deviceId);\r\n                document.querySelector(\"#sel-audio-out\").append(option);\r\n            }));\r\n            videoDevice.value = this.userSettings.videoDevice;\r\n            audioDevice.value = this.userSettings.audioDevice;\r\n            // get the media devices \r\n        }).catch(console.error);\r\n        saveSettings.addEventListener(\"click\", () => {\r\n            this.userSettings.nickname = nickname.value;\r\n            this.userSettings.audioDevice = audioDevice.value;\r\n            this.userSettings.videoDevice = videoDevice.value;\r\n            this.userSettings.videoResolution = videoResolution.value;\r\n            this.userSettings.saveSetting();\r\n            let constraints = this.userSettings.createConstraints(this.userSettings.videoResolution);\r\n            this.localMediaStream.getVideoTracks().forEach((track) => {\r\n                track.applyConstraints(constraints[\"video\"]).then(() => {\r\n                }).catch(() => {\r\n                    console.log(\"error\");\r\n                });\r\n            });\r\n        });\r\n        settings.addEventListener(\"click\", () => {\r\n            $(\"#settings-modal\").modal(\"toggle\");\r\n        });\r\n        // jQuery hacks for file share etc\r\n        $('.modal').on('shown.bs.modal', function () {\r\n            $(\".popover\").popover(\"hide\");\r\n        });\r\n        $(\"#share-file\").popover({\r\n            trigger: \"manual\",\r\n            sanitize: false,\r\n            placement: \"top\",\r\n            title: 'Select the file to share.',\r\n            html: true,\r\n            content: $('#share-form').html()\r\n        }).on(\"inserted.bs.popover\", (e) => {\r\n            $(\".file-selected\").on(\"change\", (evt) => {\r\n                const file = evt.target.files[0];\r\n                ReadFile_1.ReadFile.read(file).then((result) => {\r\n                    this.sendFile({\r\n                        name: result.tf.name,\r\n                        size: result.tf.size,\r\n                        mimeType: result.tf.type\r\n                    }, result.buffer);\r\n                    $(\"#share-file\").popover(\"hide\");\r\n                });\r\n            });\r\n        });\r\n        document.querySelector(\"#create-dungeon\").addEventListener(\"click\", () => {\r\n            $(\"#modal-dungeon\").modal(\"toggle\");\r\n            let container = document.querySelector(\".dungeon-thumbs\");\r\n            container.innerHTML = \"\";\r\n            // get a new list of participants , and show thumbs\r\n            this.participants.forEach((p) => {\r\n                p.captureImage().then((i) => {\r\n                    let canvas = document.createElement(\"canvas\");\r\n                    canvas.height = i.height;\r\n                    canvas.width = i.width;\r\n                    let ctx = canvas.getContext(\"2d\");\r\n                    ctx.drawImage(i, 0, 0, i.width, i.height);\r\n                    canvas.dataset.peerId = p.id;\r\n                    canvas.addEventListener(\"click\", () => {\r\n                        canvas.classList.toggle(\"dungeon-paricipant\");\r\n                    });\r\n                    container.append(canvas);\r\n                });\r\n            });\r\n        });\r\n        document.querySelector(\"button#invite-dungeon\").addEventListener(\"click\", () => {\r\n            document.querySelector(\".dungeons\").classList.remove(\"d-none\");\r\n            $(\"#modal-dungeon\").modal(\"toggle\");\r\n            let peers = new Array();\r\n            document.querySelectorAll(\".dungeon-paricipant\").forEach((el) => {\r\n                peers.push(el.dataset.peerId);\r\n            });\r\n            const key = Math.random().toString(36).substring(6);\r\n            this.addDungeon(key);\r\n            this.factory.GetController(\"broker\").Invoke(\"inviteDungeon\", {\r\n                peerIds: peers,\r\n                key: key,\r\n                context: this.rtcClient.Context\r\n            });\r\n        });\r\n        this.userSettings.slugHistory.getHistory().forEach((slug) => {\r\n            const option = document.createElement(\"option\");\r\n            option.setAttribute(\"value\", slug);\r\n            document.querySelector(\"#slug-history\").prepend(option);\r\n        });\r\n        generateSlug.addEventListener(\"click\", () => {\r\n            slug.value = Math.random().toString(36).substring(2).toLocaleLowerCase();\r\n            startButton.disabled = false;\r\n            $(\"#random-slug\").popover(\"hide\");\r\n        });\r\n        muteSpeakers.addEventListener(\"click\", () => {\r\n            muteSpeakers.classList.toggle(\"fa-volume-mute\");\r\n            muteSpeakers.classList.toggle(\"fa-volume-up\");\r\n            this.audioNode.muted = !this.audioNode.muted;\r\n        });\r\n        muteAudio.addEventListener(\"click\", (e) => {\r\n            this.muteAudio(e);\r\n        });\r\n        muteVideo.addEventListener(\"click\", (e) => {\r\n            this.muteVideo(e);\r\n        });\r\n        startScreenShare.addEventListener(\"click\", () => {\r\n            this.shareScreen();\r\n        });\r\n        this.shareFile.addEventListener(\"click\", () => {\r\n            $(\"#share-file\").popover(\"toggle\");\r\n        });\r\n        closeQuickstartButton.addEventListener(\"click\", () => {\r\n            document.querySelector(\"#quick-start-container\").style.display = \"none\";\r\n            this.userSettings.showQuickStart = false;\r\n            this.userSettings.saveSetting();\r\n        });\r\n        helpButton.addEventListener(\"click\", () => {\r\n            document.querySelector(\"#quick-start-container\").style.display = \"block\";\r\n            this.userSettings.showQuickStart = true;\r\n            this.userSettings.saveSetting();\r\n        });\r\n        document.querySelector(\"button#share-link\").addEventListener(\"click\", (e) => {\r\n            navigator.clipboard.writeText(`${location.origin}/#${slug.value}`).then(() => {\r\n                e.target.textContent = \"Done!\";\r\n            });\r\n        });\r\n        if (this.Slug.length >= 6) {\r\n            slug.value = this.Slug;\r\n            startButton.disabled = false;\r\n            document.querySelector(\"#random-slug\").classList.add(\"d-none\"); // if slug predefined, no random option...\r\n        }\r\n        document.querySelector(\"#close-chat\").addEventListener(\"click\", () => {\r\n            chatWindow.classList.toggle(\"d-none\");\r\n            unreadBadge.classList.add(\"d-none\");\r\n            this.numOfChatMessagesUnread = 0;\r\n            unreadBadge.textContent = \"0\";\r\n        });\r\n        document.querySelector(\"#show-chat\").addEventListener(\"click\", () => {\r\n            chatWindow.classList.toggle(\"d-none\");\r\n            unreadBadge.classList.add(\"d-none\");\r\n            this.numOfChatMessagesUnread = 0;\r\n            unreadBadge.textContent = \"0\";\r\n        });\r\n        slug.addEventListener(\"click\", () => {\r\n            $(\"#slug\").popover('show');\r\n            $(\"#random-slug\").popover(\"hide\");\r\n        });\r\n        if (location.hash.length == 0) {\r\n            $(\"#random-slug\").popover(\"show\");\r\n        }\r\n        else {\r\n            startButton.textContent = \"JOIN\";\r\n        }\r\n        slug.addEventListener(\"keyup\", () => {\r\n            if (slug.value.length >= 6) {\r\n                startButton.disabled = false;\r\n            }\r\n            else {\r\n                startButton.disabled = true;\r\n            }\r\n        });\r\n        nickname.addEventListener(\"change\", () => {\r\n            this.factory.GetController(\"broker\").Invoke(\"setNickname\", `@${nickname.value}`);\r\n        });\r\n        // chatNick.value = this.userSettings.nickname;\r\n        // chatNick.addEventListener(\"click\", () => {\r\n        //     chatNick.value = \"\";\r\n        // });\r\n        startButton.addEventListener(\"click\", () => {\r\n            this.videoGrid.classList.add(\"d-flex\");\r\n            document.querySelector(\".fa-dungeon\").classList.toggle(\"hide\");\r\n            document.querySelector(\".top-bar\").classList.remove(\"d-none\");\r\n            document.querySelector(\"#record\").classList.remove(\"d-none\");\r\n            $(\"#random-slug\").popover(\"hide\");\r\n            document.querySelector(\"#share-file\").classList.toggle(\"hide\");\r\n            // document.querySelector(\"#share-screen\").classList.toggle(\"d-none\");\r\n            document.querySelector(\"#show-chat\").classList.toggle(\"d-none\");\r\n            document.querySelector(\".our-brand\").remove();\r\n            $(\"#slug\").popover('hide');\r\n            startButton.classList.add(\"hide\");\r\n            document.querySelector(\".remote\").classList.remove(\"hide\");\r\n            document.querySelector(\".overlay\").classList.add(\"d-none\");\r\n            document.querySelector(\".join\").classList.add(\"d-none\");\r\n            this.userSettings.slugHistory.addToHistory(slug.value);\r\n            this.userSettings.saveSetting();\r\n            this.rtcClient.ChangeContext(this.appDomain.getSlug(slug.value));\r\n        });\r\n        // if local ws://localhost:1337/     \r\n        //  wss://simpleconf.herokuapp.com/\r\n        this.factory = this.connectToServer(this.appDomain.serverUrl, {});\r\n        this.factory.OnClose = (reason) => {\r\n            console.error(reason);\r\n        };\r\n        this.factory.OnOpen = (broker) => {\r\n            this.rtcClient = new thor_io_client_vnext_1.WebRTC(broker, this.rtcConfig);\r\n            broker.On(\"fileShare\", (fileinfo, arrayBuffer) => {\r\n                this.fileReceived(fileinfo, arrayBuffer);\r\n            });\r\n            // hook up dungeon functions\r\n            broker.On(\"leaveDungeon\", (data) => {\r\n                console.log(\"leaveDungeon\", data);\r\n                this.dungeons.get(data.key).removeParticipant(data.peerId);\r\n            });\r\n            broker.On(\"inviteDungeon\", (invite) => {\r\n                let toast = AppComponentToaster_1.AppComponentToaster.dungeonToaster(\"Dungeon invite\", \"Someone in the meeting created a dungeon...\");\r\n                let node = toast.children[0];\r\n                node.dataset.peerId = invite.peerId;\r\n                toast.querySelector(\".btn-primary\").addEventListener(\"click\", (el) => {\r\n                    this.factory.GetController(\"broker\").Invoke(\"acceptDungeon\", invite);\r\n                    this.addDungeon(invite.key);\r\n                    node.remove();\r\n                    try {\r\n                        this.dungeons.get(invite.key).addDungeonParticipant(this.participants.get(invite.creator));\r\n                    }\r\n                    catch (e) {\r\n                        console.log(e);\r\n                    }\r\n                });\r\n                toast.querySelector(\".btn-danger\").addEventListener(\"click\", (el) => {\r\n                    this.factory.GetController(\"broker\").Invoke(\"declineDungeon\", invite);\r\n                    node.remove();\r\n                });\r\n                document.querySelector(\".toasters\").prepend(toast);\r\n                $(\".toast\").toast(\"show\");\r\n            });\r\n            broker.On(\"acceptDungeon\", (data) => {\r\n                let d = this.dungeons.get(data.key);\r\n                try {\r\n                    d.addDungeonParticipant(this.participants.get(data.peerId));\r\n                }\r\n                catch (e) {\r\n                    console.log(e);\r\n                }\r\n                console.log(data, d);\r\n            });\r\n            // hook up chat functions...\r\n            broker.On(\"chatMessage\", (im) => {\r\n                this.numOfChatMessagesUnread++;\r\n                let message = document.createElement(\"p\");\r\n                message.textContent = im.text;\r\n                let sender = document.createElement(\"mark\");\r\n                sender.textContent = im.from;\r\n                message.prepend(sender);\r\n                chatMessages.prepend(message);\r\n                if (chatWindow.classList.contains(\"d-none\")) {\r\n                    unreadBadge.classList.remove(\"d-none\");\r\n                    unreadBadge.textContent = this.numOfChatMessagesUnread.toString();\r\n                }\r\n            });\r\n            chatMessage.addEventListener(\"keydown\", (e) => {\r\n                if (e.keyCode == 13) {\r\n                    this.sendMessage(this.userSettings.nickname, chatMessage.value);\r\n                    chatMessage.value = \"\";\r\n                }\r\n            });\r\n            this.rtcClient.OnLocalStream = (mediaStream) => {\r\n            };\r\n            this.rtcClient.OnContextConnected = (ctx) => {\r\n            };\r\n            this.rtcClient.OnContextCreated = (ctx) => {\r\n            };\r\n            this.rtcClient.OnContextChanged = (ctx) => {\r\n                this.rtcClient.ConnectContext();\r\n            };\r\n            this.rtcClient.OnContextDisconnected = (peer) => {\r\n                document.querySelector(\".p\" + peer.id).remove();\r\n                this.participants.delete(peer.id);\r\n            };\r\n            this.rtcClient.OnContextConnected = (peer) => {\r\n                document.querySelector(\".remote\").classList.add(\"hide\");\r\n            };\r\n            this.rtcClient.OnRemoteTrack = (track, connection) => {\r\n                let participant = this.tryAddParticipant(connection.id);\r\n                participant.addTrack(track, (el) => {\r\n                    this.mediaStreamBlender.addTracks(`audio-${connection.id}`, [track], false);\r\n                });\r\n                participant.onVideoTrackLost = (id, stream, track) => {\r\n                    let p = document.querySelector(\".p\" + id);\r\n                    if (p)\r\n                        p.remove();\r\n                    // todo:  Remove from blender..\r\n                };\r\n            };\r\n            this.rtcClient.OnContextCreated = function (ctx) {\r\n                // noop\r\n            };\r\n            broker.OnOpen = (ci) => {\r\n                this.factory.GetController(\"broker\").Invoke(\"setNickname\", `@${nickname.value}`);\r\n                //this.userSettings.createConstraints(this.userSettings.videoResolution)\r\n                this.getLocalStream(UserSettings_1.UserSettings.defaultConstraints, (mediaStream) => {\r\n                    this.localMediaStream = mediaStream;\r\n                    this.rtcClient.AddLocalStream(mediaStream);\r\n                    this.addLocalVideo(mediaStream);\r\n                });\r\n            };\r\n            broker.Connect();\r\n        };\r\n    }\r\n    testCameraResolutions() {\r\n        let parent = document.querySelector(\"#sel-video-res\");\r\n        parent.innerHTML = \"\";\r\n        let deviceId = document.querySelector(\"#sel-video\").value;\r\n        DetectResolutions_1.DetectResolutions.testResolutions(deviceId == \"\" ? undefined : deviceId, (result) => {\r\n            let option = document.createElement(\"option\");\r\n            option.textContent = `${result.label} ${result.width} x ${result.height} ${result.ratio}`;\r\n            option.value = result.label;\r\n            parent.append(option);\r\n        });\r\n        parent.removeAttribute(\"disabled\");\r\n    }\r\n    // Create a an AppDomain of kollokvium;\r\n    getLocalStream(constraints, cb) {\r\n        navigator.mediaDevices.getUserMedia(constraints).then((mediaStream) => {\r\n            cb(mediaStream);\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n    /**\r\n     * Adds a fileshare message to chat, when someone shared a file...\r\n     *\r\n     * @param {*} fileinfo\r\n     * @param {ArrayBuffer} arrayBuffer\r\n     * @memberof App\r\n     */\r\n    fileReceived(fileinfo, arrayBuffer) {\r\n        const p = document.createElement(\"p\");\r\n        p.textContent = \"Hey,here is shared file, click to download.. \";\r\n        const blob = new Blob([arrayBuffer], {\r\n            type: fileinfo.mimeType\r\n        });\r\n        const blobUrl = window.URL.createObjectURL(blob);\r\n        const download = document.createElement(\"a\");\r\n        download.setAttribute(\"href\", blobUrl);\r\n        download.textContent = fileinfo.name;\r\n        download.setAttribute(\"download\", fileinfo.name);\r\n        p.append(download);\r\n        document.querySelector(\"#chatmessages\").prepend(p);\r\n    }\r\n    /**\r\n     * Send a file to all in conference\r\n     *\r\n     * @param {*} fileInfo\r\n     * @param {ArrayBuffer} buffer\r\n     * @memberof App\r\n     */\r\n    sendFile(fileInfo, buffer) {\r\n        var message = new thor_io_client_vnext_1.Message(\"fileShare\", fileInfo, \"broker\", buffer);\r\n        let bm = new thor_io_client_vnext_1.BinaryMessage(message.toString(), buffer);\r\n        this.factory.GetController(\"broker\").InvokeBinary(bm.Buffer);\r\n    }\r\n    /**\r\n     * Prompt user for a screen , tab, window.\r\n     * and add the media stream to share\r\n     * @memberof App\r\n     */\r\n    shareScreen() {\r\n        const gdmOptions = {\r\n            video: {\r\n                cursor: \"always\"\r\n            },\r\n            audio: false\r\n        };\r\n        navigator.mediaDevices[\"getDisplayMedia\"](gdmOptions).then((stream) => {\r\n            stream.getVideoTracks().forEach((t) => {\r\n                this.rtcClient.LocalStreams[0].addTrack(t);\r\n            });\r\n            this.addLocalVideo(stream);\r\n            document.querySelector(\"#share-screen\").classList.add(\"hide\");\r\n        }).catch(err => console.error);\r\n    }\r\n    /**\r\n     * Mute local video  ( self )\r\n     *\r\n     * @param {*} evt\r\n     * @memberof App\r\n     */\r\n    muteVideo(evt) {\r\n        let el = evt.target;\r\n        el.classList.toggle(\"fa-video\");\r\n        el.classList.toggle(\"fa-video-slash\");\r\n        let mediaTrack = this.localMediaStream.getVideoTracks();\r\n        mediaTrack.forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n        });\r\n    }\r\n    /**\r\n     * Mute local video ( self )\r\n     *\r\n     * @param {*} evt\r\n     * @memberof App\r\n     */\r\n    muteAudio(evt) {\r\n        let el = evt.target;\r\n        el.classList.toggle(\"fa-microphone\");\r\n        el.classList.toggle(\"fa-microphone-slash\");\r\n        let mediaTrack = this.localMediaStream.getAudioTracks();\r\n        mediaTrack.forEach((track) => {\r\n            track.enabled = !track.enabled;\r\n        });\r\n    }\r\n    /**\r\n     * Add a local media stream to the UI\r\n     *\r\n     * @param {MediaStream} mediaStream\r\n     * @memberof App\r\n     */\r\n    addLocalVideo(mediaStream) {\r\n        let video = document.createElement(\"video\");\r\n        video.autoplay = true;\r\n        video.muted = true;\r\n        video.classList.add(\"l-\" + mediaStream.id);\r\n        video.srcObject = mediaStream;\r\n        let container = document.querySelector(\".local\");\r\n        container.append(video);\r\n        // and local stream to mixer / blender;\r\n        this.mediaStreamBlender.addTracks(mediaStream.id, mediaStream.getTracks(), true);\r\n    }\r\n    /**\r\n     * Send chat message\r\n     *\r\n     * @param {string} sender\r\n     * @param {string} message\r\n     * @memberof App\r\n     */\r\n    sendMessage(sender, message) {\r\n        if (sender.length == 0)\r\n            sender = \"NoName\";\r\n        const data = {\r\n            text: message,\r\n            from: sender\r\n        };\r\n        this.factory.GetController(\"broker\").Invoke(\"chatMessage\", data);\r\n    }\r\n    /**\r\n     *  Connect to the realtime server (websocket) and its controller\r\n     *\r\n     * @param {string} url\r\n     * @param {*} config\r\n     * @returns {Factory}\r\n     * @memberof App\r\n     */\r\n    connectToServer(url, config) {\r\n        return new thor_io_client_vnext_1.Factory(url, [\"broker\"]);\r\n    }\r\n    /**\r\n     * Add remote video stream\r\n     *\r\n     * @param {string} id\r\n     * @param {MediaStream} mediaStream\r\n     * @memberof App\r\n     */\r\n    addRemoteVideo(id, mediaStream) {\r\n        if (!this.shareContainer.classList.contains(\"hide\")) {\r\n            this.shareContainer.classList.add(\"hide\");\r\n        }\r\n        let videoTools = document.createElement(\"div\");\r\n        videoTools.classList.add(\"video-tools\");\r\n        let item = document.createElement(\"li\");\r\n        item.setAttribute(\"class\", \"p\" + id);\r\n        let f = document.createElement(\"i\");\r\n        f.classList.add(\"fas\", \"fa-arrows-alt\", \"fa-2x\", \"fullscreen\");\r\n        videoTools.append(f);\r\n        item.prepend(videoTools);\r\n        let video = document.createElement(\"video\");\r\n        video.srcObject = mediaStream;\r\n        video.width = 1280;\r\n        video.height = 720;\r\n        video.autoplay = true;\r\n        item.append(video);\r\n        // listener for fulscreen view of a participants video\r\n        f.addEventListener(\"click\", (e) => {\r\n            let elem = video;\r\n            if (!document.fullscreenElement) {\r\n                elem.requestFullscreen().catch(err => {\r\n                    alert(`Error attempting to enable full-screen mode: ${err.message} (${err.name})`);\r\n                });\r\n            }\r\n            else {\r\n                document.exitFullscreen();\r\n            }\r\n        });\r\n        document.querySelector(\"#remote-videos\").append(item);\r\n    }\r\n    addDungeon(key) {\r\n        let d = new DungeonComponent_1.DungeonComponent(key);\r\n        this.dungeons.set(key, d);\r\n        d.render(document.querySelector(\".dungeons\"));\r\n        document.querySelector(\"#dungeon-\" + key + \" i\").addEventListener(\"click\", () => {\r\n            d.destroy((peers) => {\r\n                peers.forEach((peerId) => {\r\n                    this.factory.GetController(\"broker\").Invoke(\"leaveDungeon\", {\r\n                        key: d.id,\r\n                        peerId: peerId\r\n                    });\r\n                });\r\n                this.dungeons.delete(key);\r\n                document.querySelector(\"#dungeon-\" + key).remove();\r\n            });\r\n        });\r\n        document.querySelector(\"#dungeon-\" + key).addEventListener(\"click\", () => {\r\n            document.querySelector(\".video-grid\").classList.add(\"blur\");\r\n            this.audioNode.muted = true;\r\n            document.querySelector(\".dungeons-header\").classList.add(\"flash\");\r\n        });\r\n        if (document.querySelector(\".dungeons\").classList.contains(\"d-none\")) {\r\n            document.querySelector(\".dungeons\").classList.remove(\"d-none\");\r\n        }\r\n    }\r\n    /**\r\n     * Get this clients media devices\r\n     *\r\n     * @returns {Promise<Array<MediaDeviceInfo>>}\r\n     * @memberof App\r\n     */\r\n    getMediaDevices() {\r\n        return new Promise((resolve, reject) => {\r\n            navigator.mediaDevices.enumerateDevices().then((devices) => {\r\n                resolve(devices);\r\n            }).catch(reject);\r\n        });\r\n    }\r\n    ;\r\n    /**\r\n     *  Add aparticipant to the \"conference\"\r\n     *\r\n     * @param {string} id\r\n     * @returns {AppParticipant}\r\n     * @memberof App\r\n     */\r\n    tryAddParticipant(id) {\r\n        if (this.participants.has(id)) {\r\n            return this.participants.get(id);\r\n        }\r\n        else {\r\n            this.participants.set(id, new AppParticipant_1.AppParticipant(id));\r\n            let p = this.participants.get(id);\r\n            p.onVideoTrackAdded = (id, mediaStream, mediaStreamTrack) => {\r\n                this.mediaStreamBlender.addTracks(id, [mediaStreamTrack], false);\r\n                this.addRemoteVideo(id, mediaStream);\r\n            };\r\n            return p;\r\n        }\r\n    }\r\n    dungeonFocues() {\r\n    }\r\n    static getInstance() {\r\n        return new App();\r\n    }\r\n}\r\nexports.App = App;\r\n/*\r\n    Launch the application\r\n*/\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    if (!(location.href.includes(\"https://\") || location.href.includes(\"http://localhost\")))\r\n        location.href = location.href.replace(\"http://\", \"https://\");\r\n    App.getInstance();\r\n});\r\n\n\n//# sourceURL=webpack:///./client/app.js?");

/***/ }),

/***/ "./client/settings.json":
/*!******************************!*\
  !*** ./client/settings.json ***!
  \******************************/
/*! exports provided: domain, contextPrefix, serverUrl, version, default */
/***/ (function(module) {

eval("module.exports = {\"domain\":\"Kollokvium\",\"contextPrefix\":\"kollokvium\",\"serverUrl\":\"ws://localhost:1337\",\"version\":\"1.2.0\"};\n\n//# sourceURL=webpack:///./client/settings.json?");

/***/ }),

/***/ "./node_modules/image-capture/src/imagecapture.js":
/*!********************************************************!*\
  !*** ./node_modules/image-capture/src/imagecapture.js ***!
  \********************************************************/
/*! exports provided: ImageCapture */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ImageCapture\", function() { return ImageCapture; });\n/**\n * MediaStream ImageCapture polyfill\n *\n * @license\n * Copyright 2018 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet ImageCapture = window.ImageCapture;\n\nif (typeof ImageCapture === 'undefined') {\n  ImageCapture = class {\n\n    /**\n     * TODO https://www.w3.org/TR/image-capture/#constructors\n     *\n     * @param {MediaStreamTrack} videoStreamTrack - A MediaStreamTrack of the 'video' kind\n     */\n    constructor(videoStreamTrack) {\n      if (videoStreamTrack.kind !== 'video')\n        throw new DOMException('NotSupportedError');\n\n      this._videoStreamTrack = videoStreamTrack;\n      if (!('readyState' in this._videoStreamTrack)) {\n        // Polyfill for Firefox\n        this._videoStreamTrack.readyState = 'live';\n      }\n\n      // MediaStream constructor not available until Chrome 55 - https://www.chromestatus.com/feature/5912172546752512\n      this._previewStream = new MediaStream([videoStreamTrack]);\n      this.videoElement = document.createElement('video');\n      this.videoElementPlaying = new Promise(resolve => {\n        this.videoElement.addEventListener('playing', resolve);\n      });\n      if (HTMLMediaElement) {\n        this.videoElement.srcObject = this._previewStream;  // Safari 11 doesn't allow use of createObjectURL for MediaStream\n      } else {\n        this.videoElement.src = URL.createObjectURL(this._previewStream);\n      }\n      this.videoElement.muted = true;\n      this.videoElement.setAttribute('playsinline', ''); // Required by Safari on iOS 11. See https://webkit.org/blog/6784\n      this.videoElement.play();\n\n      this.canvasElement = document.createElement('canvas');\n      // TODO Firefox has https://developer.mozilla.org/en-US/docs/Web/API/OffscreenCanvas\n      this.canvas2dContext = this.canvasElement.getContext('2d');\n    }\n\n    /**\n     * https://w3c.github.io/mediacapture-image/index.html#dom-imagecapture-videostreamtrack\n     * @return {MediaStreamTrack} The MediaStreamTrack passed into the constructor\n     */\n    get videoStreamTrack() {\n      return this._videoStreamTrack;\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-getphotocapabilities\n     * @return {Promise<PhotoCapabilities>} Fulfilled promise with\n     * [PhotoCapabilities](https://www.w3.org/TR/image-capture/#idl-def-photocapabilities)\n     * object on success, rejected promise on failure\n     */\n    getPhotoCapabilities() {\n      return new Promise(function executorGPC(resolve, reject) {\n        // TODO see https://github.com/w3c/mediacapture-image/issues/97\n        const MediaSettingsRange = {\n          current: 0, min: 0, max: 0,\n        };\n        resolve({\n          exposureCompensation: MediaSettingsRange,\n          exposureMode: 'none',\n          fillLightMode: 'none',\n          focusMode: 'none',\n          imageHeight: MediaSettingsRange,\n          imageWidth: MediaSettingsRange,\n          iso: MediaSettingsRange,\n          redEyeReduction: false,\n          whiteBalanceMode: 'none',\n          zoom: MediaSettingsRange,\n        });\n        reject(new DOMException('OperationError'));\n      });\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-setoptions\n     * @param {Object} photoSettings - Photo settings dictionary, https://www.w3.org/TR/image-capture/#idl-def-photosettings\n     * @return {Promise<void>} Fulfilled promise on success, rejected promise on failure\n     */\n    setOptions(photoSettings = {}) {\n      return new Promise(function executorSO(resolve, reject) {\n        // TODO\n      });\n    }\n\n    /**\n     * TODO\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-takephoto\n     * @return {Promise<Blob>} Fulfilled promise with [Blob](https://www.w3.org/TR/FileAPI/#blob)\n     * argument on success; rejected promise on failure\n     */\n    takePhoto() {\n      const self = this;\n      return new Promise(function executorTP(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\n            self.canvasElement.toBlob(resolve);\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n\n    /**\n     * Implements https://www.w3.org/TR/image-capture/#dom-imagecapture-grabframe\n     * @return {Promise<ImageBitmap>} Fulfilled promise with\n     * [ImageBitmap](https://www.w3.org/TR/html51/webappapis.html#webappapis-images)\n     * argument on success; rejected promise on failure\n     */\n    grabFrame() {\n      const self = this;\n      return new Promise(function executorGF(resolve, reject) {\n        // `If the readyState of the MediaStreamTrack provided in the constructor is not live,\n        // return a promise rejected with a new DOMException whose name is \"InvalidStateError\".`\n        if (self._videoStreamTrack.readyState !== 'live') {\n          return reject(new DOMException('InvalidStateError'));\n        }\n        self.videoElementPlaying.then(() => {\n          try {\n            self.canvasElement.width = self.videoElement.videoWidth;\n            self.canvasElement.height = self.videoElement.videoHeight;\n            self.canvas2dContext.drawImage(self.videoElement, 0, 0);\n            // TODO polyfill https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmapFactories/createImageBitmap for IE\n            resolve(window.createImageBitmap(self.canvasElement));\n          } catch (error) {\n            reject(new DOMException('UnknownError'));\n          }\n        });\n      });\n    }\n  };\n}\n\nwindow.ImageCapture = ImageCapture;\n\n\n//# sourceURL=webpack:///./node_modules/image-capture/src/imagecapture.js?");

/***/ }),

/***/ "./node_modules/mediastreamblender/index.js":
/*!**************************************************!*\
  !*** ./node_modules/mediastreamblender/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MediaStreamRecorder_1 = __webpack_require__(/*! ./src/MediaStreamRecorder */ \"./node_modules/mediastreamblender/src/MediaStreamRecorder.js\");\nexports.MediaStreamRecorder = MediaStreamRecorder_1.MediaStreamRecorder;\nvar MediaStreamBlender_1 = __webpack_require__(/*! ./src/MediaStreamBlender */ \"./node_modules/mediastreamblender/src/MediaStreamBlender.js\");\nexports.MediaStreamBlender = MediaStreamBlender_1.MediaStreamBlender;\nvar MediaLoader_1 = __webpack_require__(/*! ./src/MediaLoader */ \"./node_modules/mediastreamblender/src/MediaLoader.js\");\nexports.MediaLoader = MediaLoader_1.MediaLoader;\nvar StreamSource_1 = __webpack_require__(/*! ./src/StreamSource */ \"./node_modules/mediastreamblender/src/StreamSource.js\");\nexports.StreamSource = StreamSource_1.StreamSource;\n\n\n//# sourceURL=webpack:///./node_modules/mediastreamblender/index.js?");

/***/ }),

/***/ "./node_modules/mediastreamblender/src/MediaLoader.js":
/*!************************************************************!*\
  !*** ./node_modules/mediastreamblender/src/MediaLoader.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass MediaLoader {\n    static readFile(url) {\n        return new Promise((resolve, reject) => {\n            fetch(url).then((response) => {\n                resolve(response.blob());\n            }).catch(reject);\n        });\n    }\n    static getAudioMediaStream(url, callback) {\n        this.readFile(url).then((blob) => {\n            var context = new AudioContext();\n            var gainNode = context.createGain();\n            gainNode.connect(context.destination);\n            gainNode.gain.value = 0; // don't play for self\n            let reader = new FileReader();\n            reader.onload = (function (e) {\n                context.decodeAudioData(e.target.result, createSoundSource);\n            });\n            reader.readAsArrayBuffer(blob);\n            const createSoundSource = (buffer) => {\n                let soundSource = context.createBufferSource();\n                soundSource.buffer = buffer;\n                soundSource.start(0, 0 / 1000);\n                soundSource.connect(gainNode);\n                let destination = context.createMediaStreamDestination();\n                soundSource.connect(destination);\n                callback(destination.stream);\n            };\n        });\n    }\n}\nexports.MediaLoader = MediaLoader;\n\n\n//# sourceURL=webpack:///./node_modules/mediastreamblender/src/MediaLoader.js?");

/***/ }),

/***/ "./node_modules/mediastreamblender/src/MediaStreamBlender.js":
/*!*******************************************************************!*\
  !*** ./node_modules/mediastreamblender/src/MediaStreamBlender.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MediaStreamRecorder_1 = __webpack_require__(/*! ./MediaStreamRecorder */ \"./node_modules/mediastreamblender/src/MediaStreamRecorder.js\");\nconst StreamSource_1 = __webpack_require__(/*! ./StreamSource */ \"./node_modules/mediastreamblender/src/StreamSource.js\");\nclass MediaStreamBlender {\n    /**\n     * Create a video element , add the track(s)\n     *\n     * @param {MediaStream} stream\n     * @returns {HTMLVideoElement}\n     * @memberof MediaStreamRenderer\n     */\n    createVideoFromStream(stream) {\n        const video = document.createElement('video');\n        video.srcObject = stream;\n        video.muted = true;\n        video.width = 640;\n        video.height = 360;\n        video.autoplay = true;\n        video.play();\n        return video;\n    }\n    /**\n     * Get a video stream from the canvas\n     *\n     * @returns\n     * @memberof MediaStreamBlender\n     */\n    captureStream() {\n        let stream = this.surface[\"captureStream\"]() || this.surface[\"mozCaptureStream\"]();\n        let videoStream = new MediaStream();\n        stream.getTracks().filter(function (t) {\n            return t.kind === 'video';\n        }).forEach(track => {\n            videoStream.addTrack(track);\n        });\n        return videoStream;\n    }\n    /**\n     *  Add MediaStreamTrack\n     *\n     * @param {string} id\n     * @param {Array<MediaStreamTrack>} tracks\n     * @param {boolean} isLocal\n     * @returns {MediaStream}\n     * @memberof MediaStreamBlender\n     */\n    addTracks(id, tracks, isLocal) {\n        const stream = new MediaStream();\n        tracks.forEach((track) => {\n            if (track.kind === \"video\") {\n                stream.addTrack(track);\n                let source = new StreamSource_1.StreamSource(stream, this.createVideoFromStream(stream), isLocal);\n                this.videosSources.set(id, source);\n            }\n            else {\n                if (!this.audioContext) {\n                    this.audioContext = new AudioContext();\n                    this.audioDestination = this.audioContext.createMediaStreamDestination();\n                }\n                stream.addTrack(track);\n                let audioSource = this.audioContext.createMediaStreamSource(stream);\n                let source = new StreamSource_1.StreamSource(stream, audioSource, isLocal);\n                if (!isLocal)\n                    audioSource.connect(this.audioDestination);\n                this.audioSources.set(id, source);\n            }\n            track.onended = () => {\n                this.onTrackEnded(id, track);\n            };\n        });\n        this.onTrack();\n        return stream;\n    }\n    /**\n     *  Refresh the canvas containging vidoes ( call after a new video is added )\n     *\n     * @memberof MediaStreamBlender\n     */\n    refreshCanvas() {\n        const numOfVideos = this.videosSources.size;\n        let videoSource = Array.from(this.videosSources.values());\n        this.surface.width = numOfVideos > 1 ? videoSource[0].source.width * 2 : videoSource[0].source.width;\n        let height = 1;\n        if (numOfVideos === 3 || numOfVideos === 4) {\n            height = 2;\n        }\n        if (numOfVideos === 5 || numOfVideos === 6) {\n            height = 3;\n        }\n        if (numOfVideos === 7 || numOfVideos === 8) {\n            height = 4;\n        }\n        if (numOfVideos === 9 || numOfVideos === 10) {\n            height = 5;\n        }\n        this.surface.height = videoSource[0].source.height * height;\n    }\n    /**\n     * Get a MediaStream of all remote audio tracks ( not self )\n     *\n     * @returns\n     * @memberof MediaStreamBlender\n     */\n    getRemoteAudioStream() {\n        this.audioDestination = this.audioContext.createMediaStreamDestination();\n        this.audioSources.forEach((_audioSource) => {\n            if (!_audioSource.isLocal) {\n                _audioSource.source.connect(this.audioDestination);\n            }\n        });\n        return this.audioDestination.stream;\n    }\n    /**\n     * Get a MediaStream containing all audio tracks\n     *\n     * @returns\n     * @memberof MediaStreamBlender\n     */\n    getAllAudioStreams() {\n        this.audioDestination = this.audioContext.createMediaStreamDestination();\n        this.audioSources.forEach((_audioSource) => {\n            _audioSource.source.connect(this.audioDestination);\n        });\n        return this.audioDestination.stream;\n    }\n    /**\n     * Draw video element on th canvas\n     *\n     * @param {HTMLVideoElement} video\n     * @param {number} index\n     * @memberof MediaStreamRender\n     */\n    drawVideo(video, index) {\n        let x = 0;\n        let y = 0;\n        let width = video.width;\n        let height = video.height;\n        if (index === 1) {\n            x = video.width;\n        }\n        if (index === 2) {\n            y = video.height;\n        }\n        if (index === 3) {\n            x = video.width;\n            y = video.height;\n        }\n        if (index === 4) {\n            y = video.height * 2;\n        }\n        if (index === 5) {\n            x = video.width;\n            y = video.height * 2;\n        }\n        if (index === 6) {\n            y = video.height * 3;\n        }\n        if (index === 7) {\n            x = video.width;\n            y = video.height * 3;\n        }\n        this.ctx.drawImage(video, x, y, width, height);\n    }\n    /**\n     * Creates an instance of MediaStreamBleder.\n     * @param {HTMLCanvasElement} [el]\n     * @memberof MediaStreamBleder\n     */\n    constructor(el) {\n        this.videosSources = new Map();\n        this.audioSources = new Map();\n        this.surface = el ? el : document.createElement(\"canvas\");\n        this.ctx = this.surface.getContext(\"2d\");\n    }\n    /**\n     * Start/stop recorder\n     *\n     * @memberof MediaStreamBleder\n     */\n    record() {\n        if (!this.isRecording) {\n            let video = this.captureStream().getVideoTracks();\n            let audio = this.getAllAudioStreams().getAudioTracks();\n            let tracks = [video[0], audio[0]];\n            this.recorder = new MediaStreamRecorder_1.MediaStreamRecorder(tracks);\n            this.recorder.start(10);\n            this.onRecordingStart();\n        }\n        else {\n            this.recorder.stop();\n            this.recorder.flush().then(this.onRecordingEnded);\n        }\n        this.isRecording = !this.isRecording;\n    }\n    /**\n     * Start / stop render video elements to canvas\n     *\n     * @param {number} fps\n     * @memberof MediaStreamBleder\n     */\n    render(fps) {\n        if (!this.isRendering) {\n            this.refreshCanvas();\n            this._handle = setInterval(() => {\n                Array.from(this.videosSources.values()).forEach((v, i) => {\n                    this.drawVideo(v.source, i);\n                });\n                // draw water mark, overlay ?\n                if (this.onFrameRendered)\n                    this.onFrameRendered(this.ctx);\n            }, 1000 / fps);\n        }\n        else {\n            clearInterval(this._handle);\n            this._handle = -1;\n        }\n        this.isRendering = !this.isRendering;\n    }\n}\nexports.MediaStreamBlender = MediaStreamBlender;\n\n\n//# sourceURL=webpack:///./node_modules/mediastreamblender/src/MediaStreamBlender.js?");

/***/ }),

/***/ "./node_modules/mediastreamblender/src/MediaStreamRecorder.js":
/*!********************************************************************!*\
  !*** ./node_modules/mediastreamblender/src/MediaStreamRecorder.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass MediaStreamRecorder {\n    /**\n     *Creates an instance of MediaStreamRecorder.\n     * @param {Array<MediaStreamTrack>} tracks\n     * @memberof MediaStreamRecorder\n     */\n    constructor(tracks) {\n        this.tracks = tracks;\n        this.mediaStream = new MediaStream(tracks);\n        this.recorder = new MediaRecorder(this.mediaStream, {\n            mimeType: 'video/webm;codecs=vp9'\n        });\n        this.recorder.ondataavailable = (e) => {\n            if (e.data.size > 0)\n                this.data.push(e.data);\n        };\n    }\n    /**\n     * Get a BlobURL from data\n     *\n     * @returns {string}\n     * @memberof MediaStreamRecorder\n     */\n    getBlobUrl() {\n        let blob = new Blob(this.data, {\n            type: 'video/webm'\n        });\n        return URL.createObjectURL(blob);\n    }\n    /**\n     * Get recorded data as Blob\n     *\n     * @returns {Blob}\n     * @memberof MediaStreamRecorder\n     */\n    getBlob() {\n        let blob = new Blob(this.data, {\n            type: 'video/webm'\n        });\n        return blob;\n    }\n    /**\n     * Flush data buffer and get recorded data (blob)\n     *\n     * @returns {Promise<string>}\n     * @memberof MediaStreamRecorder\n     */\n    flush() {\n        return new Promise((resolve, reject) => {\n            resolve(this.getBlobUrl());\n            this.data = new Array();\n        });\n    }\n    /**\n     * Stop recording\n     *\n     * @memberof MediaStreamRecorder\n     */\n    stop() {\n        this.recorder.stop();\n    }\n    /**\n     * Start recording\n     *\n     * @param {number} n\n     * @memberof MediaStreamRecorder\n     */\n    start(n) {\n        this.data = new Array();\n        this.recorder.start(n);\n    }\n}\nexports.MediaStreamRecorder = MediaStreamRecorder;\n\n\n//# sourceURL=webpack:///./node_modules/mediastreamblender/src/MediaStreamRecorder.js?");

/***/ }),

/***/ "./node_modules/mediastreamblender/src/StreamSource.js":
/*!*************************************************************!*\
  !*** ./node_modules/mediastreamblender/src/StreamSource.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass StreamSource {\n    /**\n     *Creates an instance of StreamSource.\n     * @param {MediaStream} stream\n     * @param {*} source\n     * @param {boolean} isLocal\n     * @memberof StreamSource\n     */\n    constructor(stream, source, isLocal) {\n        this.stream = stream;\n        this.source = source;\n        this.isLocal = isLocal;\n    }\n}\nexports.StreamSource = StreamSource;\n\n\n//# sourceURL=webpack:///./node_modules/mediastreamblender/src/StreamSource.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/index.js":
/*!****************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BandwidthConstraints_1 = __webpack_require__(/*! ./src/WebRTC/BandwidthConstraints */ \"./node_modules/thor-io.client-vnext/src/WebRTC/BandwidthConstraints.js\");\nexports.BandwidthConstraints = BandwidthConstraints_1.BandwidthConstraints;\nvar BinaryMessage_1 = __webpack_require__(/*! ./src/Messages/BinaryMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js\");\nexports.BinaryMessage = BinaryMessage_1.BinaryMessage;\nvar DataChannel_1 = __webpack_require__(/*! ./src/WebRTC/DataChannel */ \"./node_modules/thor-io.client-vnext/src/WebRTC/DataChannel.js\");\nexports.DataChannel = DataChannel_1.DataChannel;\nvar Factory_1 = __webpack_require__(/*! ./src/Factory */ \"./node_modules/thor-io.client-vnext/src/Factory.js\");\nexports.Factory = Factory_1.Factory;\nvar TextMessage_1 = __webpack_require__(/*! ./src/Messages/TextMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js\");\nexports.Message = TextMessage_1.TextMessage;\nvar Listener_1 = __webpack_require__(/*! ./src/Listener */ \"./node_modules/thor-io.client-vnext/src/Listener.js\");\nexports.Listener = Listener_1.Listener;\nvar PeerChannel_1 = __webpack_require__(/*! ./src/WebRTC/PeerChannel */ \"./node_modules/thor-io.client-vnext/src/WebRTC/PeerChannel.js\");\nexports.PeerChannel = PeerChannel_1.PeerChannel;\nvar PropertyMessage_1 = __webpack_require__(/*! ./src/Messages/PropertyMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/PropertyMessage.js\");\nexports.PropertyMessage = PropertyMessage_1.PropertyMessage;\nvar Controller_1 = __webpack_require__(/*! ./src/Controller */ \"./node_modules/thor-io.client-vnext/src/Controller.js\");\nexports.Proxy = Controller_1.Controller;\nvar Utils_1 = __webpack_require__(/*! ./src/Utils/Utils */ \"./node_modules/thor-io.client-vnext/src/Utils/Utils.js\");\nexports.Utils = Utils_1.Utils;\nvar WebRTC_1 = __webpack_require__(/*! ./src/WebRTC/WebRTC */ \"./node_modules/thor-io.client-vnext/src/WebRTC/WebRTC.js\");\nexports.WebRTC = WebRTC_1.WebRTC;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/index.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Controller.js":
/*!*************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Controller.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextMessage_1 = __webpack_require__(/*! ./Messages/TextMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js\");\nvar Listener_1 = __webpack_require__(/*! ./Listener */ \"./node_modules/thor-io.client-vnext/src/Listener.js\");\nvar Controller = (function () {\n    function Controller(alias, ws) {\n        var _this = this;\n        this.alias = alias;\n        this.ws = ws;\n        this.listeners = new Array();\n        this.IsConnected = false;\n        this.On(\"___error\", function (err) {\n            _this.OnError(err);\n        });\n    }\n    Controller.prototype.OnError = function (event) { };\n    Controller.prototype.OnOpen = function (event) { };\n    Controller.prototype.OnClose = function (event) { };\n    Controller.prototype.Connect = function () {\n        this.ws.send(new TextMessage_1.TextMessage(\"___connect\", {}, this.alias).toString());\n        return this;\n    };\n    ;\n    Controller.prototype.Close = function () {\n        this.ws.send(new TextMessage_1.TextMessage(\"___close\", {}, this.alias).toString());\n        return this;\n    };\n    ;\n    Controller.prototype.Subscribe = function (topic, callback) {\n        this.ws.send(new TextMessage_1.TextMessage(\"___subscribe\", {\n            topic: topic,\n            controller: this.alias\n        }, this.alias).toString());\n        return this.On(topic, callback);\n    };\n    Controller.prototype.Unsubscribe = function (topic) {\n        this.ws.send(new TextMessage_1.TextMessage(\"___unsubscribe\", {\n            topic: topic,\n            controller: this.alias\n        }, this.alias).toString());\n    };\n    Controller.prototype.On = function (topic, fn) {\n        var listener = new Listener_1.Listener(topic, fn);\n        this.listeners.push(listener);\n        return listener;\n    };\n    Controller.prototype.Off = function (topic) {\n        var index = this.listeners.indexOf(this.findListener(topic));\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    };\n    Controller.prototype.findListener = function (topic) {\n        var listener = this.listeners.find(function (pre) {\n            return pre.topic === topic;\n        });\n        return listener;\n    };\n    Controller.prototype.InvokeBinary = function (buffer) {\n        if (buffer instanceof ArrayBuffer) {\n            this.ws.send(buffer);\n            return this;\n        }\n        else {\n            throw (\"parameter provided must be an ArrayBuffer constructed by Client.BinaryMessage\");\n        }\n    };\n    Controller.prototype.PublishBinary = function (buffer) {\n        if (buffer instanceof ArrayBuffer) {\n            this.ws.send(buffer);\n            return this;\n        }\n        else {\n            throw (\"parameter provided must be an ArrayBuffer constructed by Client.BinaryMessage\");\n        }\n    };\n    Controller.prototype.Invoke = function (method, data, controller) {\n        this.ws.send(new TextMessage_1.TextMessage(method, data, controller || this.alias).toString());\n        return this;\n    };\n    Controller.prototype.Publish = function (topic, data, controller) {\n        this.Invoke(topic, data, controller || this.alias);\n        return this;\n    };\n    Controller.prototype.SetProperty = function (propName, propValue, controller) {\n        this.Invoke(propName, propValue, controller || this.alias);\n        return this;\n    };\n    Controller.prototype.Dispatch = function (topic, data, buffer) {\n        if (topic === \"___open\") {\n            this.IsConnected = true;\n            this.OnOpen(JSON.parse(data));\n            return;\n        }\n        else if (topic === \"___close\") {\n            this.OnClose([JSON.parse(data)]);\n            this.IsConnected = false;\n        }\n        else {\n            var listener = this.findListener(topic);\n            if (listener)\n                listener.fn(JSON.parse(data), buffer);\n        }\n    };\n    return Controller;\n}());\nexports.Controller = Controller;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Controller.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Factory.js":
/*!**********************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Factory.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BinaryMessage_1 = __webpack_require__(/*! ./Messages/BinaryMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js\");\nvar Controller_1 = __webpack_require__(/*! ./Controller */ \"./node_modules/thor-io.client-vnext/src/Controller.js\");\nvar Factory = (function () {\n    function Factory(url, controllers, params) {\n        var _this = this;\n        this.url = url;\n        this.controllers = new Map();\n        this.ws = new WebSocket(url + this.toQuery(params || {}));\n        this.ws.binaryType = \"arraybuffer\";\n        controllers.forEach(function (alias) {\n            _this.controllers.set(alias, new Controller_1.Controller(alias, _this.ws));\n        });\n        this.ws.onmessage = function (event) {\n            if (typeof (event.data) !== \"object\") {\n                var message = JSON.parse(event.data);\n                _this.GetController(message.C).Dispatch(message.T, message.D);\n            }\n            else {\n                var message = BinaryMessage_1.BinaryMessage.fromArrayBuffer(event.data);\n                _this.GetController(message.C).Dispatch(message.T, message.D, message.B);\n            }\n        };\n        this.ws.onclose = function (event) {\n            _this.IsConnected = false;\n            _this.OnClose.apply(_this, [event]);\n        };\n        this.ws.onerror = function (error) {\n            _this.OnError.apply(_this, [error]);\n        };\n        this.ws.onopen = function (event) {\n            _this.IsConnected = true;\n            _this.OnOpen.apply(_this, Array.from(_this.controllers.values()));\n        };\n    }\n    Factory.prototype.toQuery = function (obj) {\n        return \"?\" + Object.keys(obj).map(function (key) { return (encodeURIComponent(key) + \"=\" +\n            encodeURIComponent(obj[key])); }).join(\"&\");\n    };\n    Factory.prototype.Close = function () {\n        this.ws.close();\n    };\n    Factory.prototype.GetController = function (alias) {\n        return this.controllers.get(alias);\n    };\n    Factory.prototype.RemoveController = function (alias) {\n        this.controllers.delete(alias);\n    };\n    Factory.prototype.OnOpen = function (controllers) { };\n    Factory.prototype.OnError = function (error) { };\n    Factory.prototype.OnClose = function (event) { };\n    return Factory;\n}());\nexports.Factory = Factory;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Factory.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Listener.js":
/*!***********************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Listener.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Listener = (function () {\n    function Listener(topic, fn) {\n        this.fn = fn;\n        this.topic = topic;\n        this.count = 0;\n    }\n    return Listener;\n}());\nexports.Listener = Listener;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Listener.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js":
/*!*************************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils_1 = __webpack_require__(/*! ../Utils/Utils */ \"./node_modules/thor-io.client-vnext/src/Utils/Utils.js\");\nvar TextMessage_1 = __webpack_require__(/*! ./TextMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js\");\nvar BinaryMessage = (function () {\n    function BinaryMessage(message, arrayBuffer) {\n        this.arrayBuffer = arrayBuffer;\n        this.header = new Uint8Array(Utils_1.Utils.longToArray(message.length));\n        this.Buffer = this.joinBuffers(this.joinBuffers(this.header.buffer, Utils_1.Utils.stingToBuffer(message).buffer), arrayBuffer);\n    }\n    BinaryMessage.fromArrayBuffer = function (buffer) {\n        var bytes = new Uint8Array(buffer);\n        var header = bytes.slice(0, 8);\n        var payloadLength = Utils_1.Utils.arrayToLong(header);\n        var start = header.byteLength + payloadLength;\n        var bytesMessage = bytes.slice(header.byteLength, start);\n        var stop = buffer.byteLength - start;\n        var messageBuffer = bytes.slice(start, stop);\n        var message = JSON.parse(String.fromCharCode.apply(null, new Uint16Array(bytesMessage)));\n        return new TextMessage_1.TextMessage(message.T, message.D, message.C, messageBuffer);\n    };\n    BinaryMessage.prototype.joinBuffers = function (a, b) {\n        var newBuffer = new Uint8Array(a.byteLength + b.byteLength);\n        newBuffer.set(new Uint8Array(a), 0);\n        newBuffer.set(new Uint8Array(b), a.byteLength);\n        return newBuffer.buffer;\n    };\n    return BinaryMessage;\n}());\nexports.BinaryMessage = BinaryMessage;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Messages/PropertyMessage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Messages/PropertyMessage.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils_1 = __webpack_require__(/*! ../Utils/Utils */ \"./node_modules/thor-io.client-vnext/src/Utils/Utils.js\");\nvar PropertyMessage = (function () {\n    function PropertyMessage() {\n        this.messageId = Utils_1.Utils.newGuid();\n    }\n    return PropertyMessage;\n}());\nexports.PropertyMessage = PropertyMessage;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Messages/PropertyMessage.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js":
/*!***********************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BinaryMessage_1 = __webpack_require__(/*! ./BinaryMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/BinaryMessage.js\");\nvar TextMessage = (function () {\n    function TextMessage(topic, object, controller, buffer) {\n        this.D = object;\n        this.T = topic;\n        this.C = controller;\n        this.B = buffer;\n    }\n    Object.defineProperty(TextMessage.prototype, \"JSON\", {\n        get: function () {\n            return {\n                T: this.T,\n                D: JSON.stringify(this.D),\n                C: this.C\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextMessage.prototype.toString = function () {\n        return JSON.stringify(this.JSON);\n    };\n    TextMessage.fromArrayBuffer = function (buffer) {\n        return BinaryMessage_1.BinaryMessage.fromArrayBuffer(buffer);\n    };\n    return TextMessage;\n}());\nexports.TextMessage = TextMessage;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/Utils/Utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/Utils/Utils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Utils = (function () {\n    function Utils() {\n    }\n    Utils.stingToBuffer = function (str) {\n        var len = str.length;\n        var arr = new Array(len);\n        for (var i = 0; i < len; i++) {\n            arr[i] = str.charCodeAt(i) & 0xFF;\n        }\n        return new Uint8Array(arr);\n    };\n    Utils.arrayToLong = function (byteArray) {\n        var value = 0;\n        var byteLength = byteArray.byteLength;\n        for (var i = byteLength - 1; i >= 0; i--) {\n            value = (value * 256) + byteArray[i];\n        }\n        return value;\n    };\n    Utils.longToArray = function (long) {\n        var byteArray = new Uint8Array(8);\n        var byteLength = byteArray.length;\n        for (var index = 0; index < byteLength; index++) {\n            var byte = long & 0xff;\n            byteArray[index] = byte;\n            long = (long - byte) / 256;\n        }\n        return byteArray;\n    };\n    Utils.newGuid = function () {\n        var s4 = function () {\n            return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n        };\n        return s4() + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + \"-\" + s4() + s4() + s4();\n    };\n    return Utils;\n}());\nexports.Utils = Utils;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/Utils/Utils.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/WebRTC/BandwidthConstraints.js":
/*!******************************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/WebRTC/BandwidthConstraints.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BandwidthConstraints = (function () {\n    function BandwidthConstraints(videobandwidth, audiobandwidth) {\n        this.videobandwidth = videobandwidth;\n        this.audiobandwidth = audiobandwidth;\n    }\n    return BandwidthConstraints;\n}());\nexports.BandwidthConstraints = BandwidthConstraints;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/WebRTC/BandwidthConstraints.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/WebRTC/DataChannel.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/WebRTC/DataChannel.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TextMessage_1 = __webpack_require__(/*! ../Messages/TextMessage */ \"./node_modules/thor-io.client-vnext/src/Messages/TextMessage.js\");\nvar Listener_1 = __webpack_require__(/*! ../Listener */ \"./node_modules/thor-io.client-vnext/src/Listener.js\");\nvar DataChannel = (function () {\n    function DataChannel(name, listeners) {\n        this.listeners = listeners || new Array();\n        this.PeerChannels = new Array();\n        this.Name = name;\n    }\n    DataChannel.prototype.findListener = function (topic) {\n        var listener = this.listeners.find(function (pre) {\n            return pre.topic === topic;\n        });\n        return listener;\n    };\n    DataChannel.prototype.On = function (topic, fn) {\n        var listener = new Listener_1.Listener(topic, fn);\n        this.listeners.push(listener);\n        return listener;\n    };\n    DataChannel.prototype.Off = function (topic) {\n        var index = this.listeners.indexOf(this.findListener(topic));\n        if (index >= 0)\n            this.listeners.splice(index, 1);\n    };\n    DataChannel.prototype.OnOpen = function (event, peerId) { };\n    DataChannel.prototype.OnClose = function (event, peerId) { };\n    DataChannel.prototype.onMessage = function (event) {\n        var msg = JSON.parse(event.data);\n        var listener = this.findListener(msg.T);\n        if (listener)\n            listener.fn.apply(this, [JSON.parse(msg.D)]);\n    };\n    DataChannel.prototype.Close = function () {\n        this.PeerChannels.forEach(function (pc) {\n            pc.dataChannel.close();\n        });\n    };\n    DataChannel.prototype.Invoke = function (topic, data, controller) {\n        var _this = this;\n        this.PeerChannels.forEach(function (channel) {\n            if (channel.dataChannel.readyState === \"open\") {\n                channel.dataChannel.send(new TextMessage_1.TextMessage(topic, data, _this.Name).toString());\n            }\n        });\n        return this;\n    };\n    DataChannel.prototype.addPeerChannel = function (pc) {\n        this.PeerChannels.push(pc);\n    };\n    DataChannel.prototype.removePeerChannel = function (id) {\n        var match = this.PeerChannels.find(function (p) {\n            return p.peerId === id;\n        });\n        var index = this.PeerChannels.indexOf(match);\n        if (index > -1)\n            this.PeerChannels.splice(index, 1);\n    };\n    return DataChannel;\n}());\nexports.DataChannel = DataChannel;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/WebRTC/DataChannel.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/WebRTC/PeerChannel.js":
/*!*********************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/WebRTC/PeerChannel.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PeerChannel = (function () {\n    function PeerChannel(peerId, dataChannel, label) {\n        this.peerId = peerId;\n        this.dataChannel = dataChannel;\n        this.label = label;\n    }\n    return PeerChannel;\n}());\nexports.PeerChannel = PeerChannel;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/WebRTC/PeerChannel.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/WebRTC/WebRTC.js":
/*!****************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/WebRTC/WebRTC.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebRTCConnection_1 = __webpack_require__(/*! ./WebRTCConnection */ \"./node_modules/thor-io.client-vnext/src/WebRTC/WebRTCConnection.js\");\nvar PeerChannel_1 = __webpack_require__(/*! ./PeerChannel */ \"./node_modules/thor-io.client-vnext/src/WebRTC/PeerChannel.js\");\nvar DataChannel_1 = __webpack_require__(/*! ./DataChannel */ \"./node_modules/thor-io.client-vnext/src/WebRTC/DataChannel.js\");\nvar BandwidthConstraints_1 = __webpack_require__(/*! ./BandwidthConstraints */ \"./node_modules/thor-io.client-vnext/src/WebRTC/BandwidthConstraints.js\");\nvar WebRTC = (function () {\n    function WebRTC(brokerController, rtcConfig) {\n        var _this = this;\n        this.brokerController = brokerController;\n        this.rtcConfig = rtcConfig;\n        this.Errors = new Array();\n        this.LocalStreams = new Array();\n        this.DataChannels = new Map();\n        this.Peers = new Map();\n        this.brokerController.On(\"contextSignal\", function (signal) {\n            var msg = JSON.parse(signal.message);\n            switch (msg.type) {\n                case \"offer\":\n                    _this.onOffer(signal);\n                    break;\n                case \"answer\":\n                    _this.onAnswer(signal);\n                    break;\n                case \"candidate\":\n                    _this.onCandidate(signal);\n                    break;\n            }\n        });\n        brokerController.On(\"contextCreated\", function (peer) {\n            _this.LocalPeerId = peer.peerId;\n            _this.Context = peer.context;\n            _this.OnContextCreated(peer);\n        });\n        brokerController.On(\"contextChanged\", function (context) {\n            _this.Context = context;\n            _this.OnContextChanged(context);\n        });\n        brokerController.On(\"connectTo\", function (peers) {\n            _this.onConnectTo(peers);\n        });\n    }\n    WebRTC.prototype.onConnectTo = function (peerConnections) {\n        this.Connect(peerConnections);\n    };\n    WebRTC.prototype.onConnected = function (peerId) {\n        this.OnContextConnected(this.findPeerConnection(peerId), this.getPeerConnection(peerId));\n    };\n    WebRTC.prototype.OnDisconnected = function (peerId) {\n        var peerConnection = this.getPeerConnection(peerId);\n        this.OnContextDisconnected(this.findPeerConnection(peerId), peerConnection);\n        peerConnection.close();\n        this.removePeerConnection(peerId);\n    };\n    WebRTC.prototype.setBandwithConstraints = function (videobandwidth, audiobandwidth) {\n        this.bandwidthConstraints = new BandwidthConstraints_1.BandwidthConstraints(videobandwidth, audiobandwidth);\n    };\n    WebRTC.prototype.setMediaBitrates = function (sdp) {\n        return this.setMediaBitrate(this.setMediaBitrate(sdp, \"video\", this.bandwidthConstraints.videobandwidth), \"audio\", this.bandwidthConstraints.audiobandwidth);\n    };\n    WebRTC.prototype.setMediaBitrate = function (sdp, media, bitrate) {\n        var lines = sdp.split(\"\\n\");\n        var line = -1;\n        for (var i = 0; i < lines.length; i++) {\n            if (lines[i].indexOf(\"m=\" + media) === 0) {\n                line = i;\n                break;\n            }\n        }\n        if (line === -1) {\n            return sdp;\n        }\n        line++;\n        while (lines[line].indexOf(\"i=\") === 0 || lines[line].indexOf(\"c=\") === 0) {\n            line++;\n        }\n        if (lines[line].indexOf(\"b\") === 0) {\n            lines[line] = \"b=AS:\" + bitrate;\n            return lines.join(\"\\n\");\n        }\n        var newLines = lines.slice(0, line);\n        newLines.push(\"b=AS:\" + bitrate);\n        newLines = newLines.concat(lines.slice(line, lines.length));\n        return newLines.join(\"\\n\");\n    };\n    WebRTC.prototype.CreateDataChannel = function (name) {\n        var channel = new DataChannel_1.DataChannel(name);\n        this.DataChannels.set(name, channel);\n        return channel;\n    };\n    WebRTC.prototype.RemoveDataChannel = function (name) {\n        this.DataChannels.delete(name);\n    };\n    WebRTC.prototype.addError = function (err) {\n        this.OnError(err);\n    };\n    WebRTC.prototype.onCandidate = function (event) {\n        var _this = this;\n        var msg = JSON.parse(event.message);\n        var candidate = msg.iceCandidate;\n        var pc = this.getPeerConnection(event.sender);\n        pc.addIceCandidate(new RTCIceCandidate(candidate)).then(function () {\n        }).catch(function (err) {\n            _this.addError(err);\n        });\n    };\n    WebRTC.prototype.onAnswer = function (event) {\n        var _this = this;\n        var pc = this.getPeerConnection(event.sender);\n        pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(event.message))).then(function (p) {\n        }).catch(function (err) {\n            _this.addError(err);\n        });\n    };\n    WebRTC.prototype.onOffer = function (event) {\n        var _this = this;\n        var pc = this.getPeerConnection(event.sender);\n        this.LocalStreams.forEach(function (stream) {\n            stream.getTracks().forEach(function (track) {\n                pc.addTrack(track, stream);\n            });\n        });\n        pc.setRemoteDescription(new RTCSessionDescription(JSON.parse(event.message)));\n        pc.createAnswer({ offerToReceiveAudio: true, offerToReceiveVideo: true }).then(function (description) {\n            pc.setLocalDescription(description).then(function () {\n                if (_this.bandwidthConstraints)\n                    description.sdp = _this.setMediaBitrates(description.sdp);\n                var answer = {\n                    sender: _this.LocalPeerId,\n                    recipient: event.sender,\n                    message: JSON.stringify(description)\n                };\n                _this.brokerController.Invoke(\"contextSignal\", answer);\n            }).catch(function (err) { return _this.addError(err); });\n        }).catch(function (err) { return _this.addError(err); });\n    };\n    WebRTC.prototype.AddLocalStream = function (stream) {\n        this.LocalStreams.push(stream);\n        return this;\n    };\n    WebRTC.prototype.AddIceServer = function (iceServer) {\n        this.rtcConfig.iceServers.push(iceServer);\n        return this;\n    };\n    WebRTC.prototype.removePeerConnection = function (id) {\n        this.Peers.delete(id);\n    };\n    WebRTC.prototype.createPeerConnection = function (id) {\n        var _this = this;\n        var rtcPeerConnection = new RTCPeerConnection(this.rtcConfig);\n        rtcPeerConnection.onsignalingstatechange = function (state) { };\n        rtcPeerConnection.onicecandidate = function (event) {\n            if (!event || !event.candidate)\n                return;\n            if (event.candidate) {\n                var msg = {\n                    sender: _this.LocalPeerId,\n                    recipient: id,\n                    message: JSON.stringify({\n                        type: 'candidate',\n                        iceCandidate: event.candidate\n                    })\n                };\n                _this.brokerController.Invoke(\"contextSignal\", msg);\n            }\n        };\n        rtcPeerConnection.oniceconnectionstatechange = function (event) {\n            switch (event.target.iceConnectionState) {\n                case \"connected\":\n                    _this.onConnected(id);\n                    break;\n                case \"disconnected\":\n                    _this.OnDisconnected(id);\n                    break;\n            }\n            ;\n        };\n        rtcPeerConnection.ontrack = function (event) {\n            var connection = _this.Peers.get(id);\n            connection.stream.addTrack(event.track);\n            _this.OnRemoteTrack(event.track, connection);\n        };\n        this.DataChannels.forEach(function (dataChannel) {\n            var pc = new PeerChannel_1.PeerChannel(id, rtcPeerConnection.createDataChannel(dataChannel.Name), dataChannel.Name);\n            dataChannel.addPeerChannel(pc);\n            rtcPeerConnection.ondatachannel = function (event) {\n                var channel = event.channel;\n                channel.onopen = function (event) {\n                    dataChannel.OnOpen(event, id);\n                };\n                channel.onclose = function (event) {\n                    dataChannel.removePeerChannel(id);\n                    dataChannel.OnClose(event, id);\n                };\n                channel.onmessage = function (message) {\n                    dataChannel.onMessage(message);\n                };\n            };\n        });\n        return rtcPeerConnection;\n    };\n    WebRTC.prototype.findPeerConnection = function (id) {\n        return this.Peers.get(id);\n    };\n    WebRTC.prototype.reconnectAll = function () {\n        throw \"not yet implemeted\";\n    };\n    WebRTC.prototype.getPeerConnection = function (id) {\n        var match = this.Peers.get(id);\n        if (!match) {\n            var pc = new WebRTCConnection_1.WebRTCConnection(id, this.createPeerConnection(id));\n            this.Peers.set(id, pc);\n            return pc.RTCPeer;\n        }\n        return match.RTCPeer;\n    };\n    WebRTC.prototype.createOffer = function (peer) {\n        var _this = this;\n        var peerConnection = this.createPeerConnection(peer.peerId);\n        this.LocalStreams.forEach(function (stream) {\n            stream.getTracks().forEach(function (track) {\n                peerConnection.addTrack(track, stream);\n            });\n            _this.OnLocalStream(stream);\n        });\n        peerConnection.createOffer({ offerToReceiveAudio: true, offerToReceiveVideo: true }).then(function (description) {\n            peerConnection.setLocalDescription(description).then(function () {\n                if (_this.bandwidthConstraints)\n                    description.sdp = _this.setMediaBitrates(description.sdp);\n                var offer = {\n                    sender: _this.LocalPeerId,\n                    recipient: peer.peerId,\n                    message: JSON.stringify(description)\n                };\n                _this.brokerController.Invoke(\"contextSignal\", offer);\n            }).catch(function (err) {\n                _this.addError(err);\n            });\n        }).catch(function (err) {\n            _this.addError(err);\n        });\n        return peerConnection;\n    };\n    WebRTC.prototype.Disconnect = function () {\n        this.Peers.forEach(function (connection) {\n            connection.RTCPeer.close();\n        });\n        this.ChangeContext(Math.random().toString(36).substring(2));\n    };\n    WebRTC.prototype.DisconnectPeer = function (id) {\n        var peer = this.findPeerConnection(id);\n        peer.RTCPeer.close();\n    };\n    WebRTC.prototype.Connect = function (peerConnections) {\n        var _this = this;\n        peerConnections.forEach(function (peerConnection) {\n            var pc = new WebRTCConnection_1.WebRTCConnection(peerConnection.peerId, _this.createOffer(peerConnection));\n            _this.Peers.set(peerConnection.peerId, pc);\n        });\n        return this;\n    };\n    WebRTC.prototype.ChangeContext = function (context) {\n        this.brokerController.Invoke(\"changeContext\", { context: context });\n        return this;\n    };\n    WebRTC.prototype.ConnectPeers = function () {\n        this.brokerController.Invoke(\"connectContext\", {});\n    };\n    WebRTC.prototype.ConnectContext = function () {\n        this.ConnectPeers();\n    };\n    return WebRTC;\n}());\nexports.WebRTC = WebRTC;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/WebRTC/WebRTC.js?");

/***/ }),

/***/ "./node_modules/thor-io.client-vnext/src/WebRTC/WebRTCConnection.js":
/*!**************************************************************************!*\
  !*** ./node_modules/thor-io.client-vnext/src/WebRTC/WebRTCConnection.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebRTCConnection = (function () {\n    function WebRTCConnection(id, rtcPeerConnection) {\n        this.id = id;\n        this.RTCPeer = rtcPeerConnection;\n        this.stream = new MediaStream();\n    }\n    return WebRTCConnection;\n}());\nexports.WebRTCConnection = WebRTCConnection;\n\n\n//# sourceURL=webpack:///./node_modules/thor-io.client-vnext/src/WebRTC/WebRTCConnection.js?");

/***/ })

/******/ });